(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    260729,       5012]
NotebookOptionsPosition[    255564,       4902]
NotebookOutlinePosition[    256001,       4919]
CellTagsIndexPosition[    255958,       4916]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["3.024 Lab 4.1 - Band Gaps", "Section",
 CellChangeTimes->{{3.6967220790826902`*^9, 
  3.696722101561177*^9}},ExpressionUUID->"8bd8dd56-5d8e-45a8-aacd-\
948f0665fb5e"],

Cell["\<\
The following is the result of a simulation that gives the theoretical \
spectrum produced by light incident on a one-dimensional photonic crystal \
with alternating layers of two materials with different thicknesses and \
indices of refraction. For the light, you can control the angle of incidence \
and whether the light is TE or TM. For the materials, you can control the \
indices of refraction and thickness of the two materials, as well as the \
number of layers. The \[Lambda] controls allow you to change the range of the \
plot and place a guide line on it to identify the central frequency. You can \
export the image or the raw data using the buttons at the bottom.\
\>", "Text",
 CellChangeTimes->{{3.696722203773697*^9, 3.696722336354376*^9}, {
   3.696722367540477*^9, 3.6967223686532493`*^9}, {3.696722491885812*^9, 
   3.696722587978842*^9}, {3.6967226410570173`*^9, 3.6967226871774235`*^9}, {
   3.6967232221765614`*^9, 3.6967233933901033`*^9}, 
   3.759064174566069*^9},ExpressionUUID->"b41be974-9a7e-45c5-9374-\
b68be74f06be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`lamloc$$ = 
    524.9999999999976, $CellContext`lmax$$ = 1200., $CellContext`lmin$$ = 
    300., $CellContext`lone$$ = 85., $CellContext`ltwo$$ = 
    85., $CellContext`mode$$ = "TM", $CellContext`n1$$ = 
    3.6000000000000196`, $CellContext`n2$$ = 
    2.299999999999983, $CellContext`numlay$$ = 6, $CellContext`tin$$ = 25., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mode$$], "TE", "Mode"}, {
      "TE" -> "Tranverse Electic (E-parallel)", "TM" -> 
       "Transverse Magnetic (H-parallel)"}}, {{
       Hold[$CellContext`tin$$], 25, 
       "\!\(\*SubscriptBox[\(\[Theta]\), \(\(in\)\(\\ \)\)]\)"}, 0, 80}, {{
       Hold[$CellContext`n1$$], 1.5, "Index \[Alpha]"}, 1, 20}, {{
       Hold[$CellContext`n2$$], 2.62, "Index \[Beta]"}, 1, 20}, {{
       Hold[$CellContext`lone$$], 65, "Width \[Alpha] (nm)"}, 1, 500}, {{
       Hold[$CellContext`ltwo$$], 65, "Width \[Beta] (nm)"}, 1, 500}, {{
       Hold[$CellContext`numlay$$], 50, "Number of Layers"}, 2, 100, 1}, {{
       Hold[$CellContext`lmin$$], 300, 
       "\!\(\*SubscriptBox[\(\[Lambda]\), \(\(min\)\(\\ \)\)]\)"}, 0, 600}, {{
       Hold[$CellContext`lmax$$], 900, 
       "\!\(\*SubscriptBox[\(\[Lambda]\), \(\(max\)\(\\ \)\)]\)"}, 
      Dynamic[$CellContext`lmin$$], 1200}, {{
       Hold[$CellContext`lamloc$$], 525, "\[Lambda] guide line"}, 
      Dynamic[$CellContext`lmin$$ - 100], 
      Dynamic[$CellContext`lmax$$ + 100]}, {
      Hold[
       Button["Export Image", 
        Module[{$CellContext`currentgraphic$, $CellContext`nm$}, \
$CellContext`currentgraphic$ = Column[{
             $CellContext`view[$CellContext`mode$$, $CellContext`lone$$, \
$CellContext`ltwo$$, $CellContext`n1$$, $CellContext`n2$$, \
$CellContext`numlay$$, $CellContext`tin$$, $CellContext`lmin$$, \
$CellContext`lmax$$, $CellContext`lamloc$$], 
             Graphics[
              $CellContext`stackGraphic[$CellContext`n1$$, $CellContext`n2$$, 
               4 $CellContext`lone$$, 
               4 $CellContext`ltwo$$, $CellContext`numlay$$, \
$CellContext`tin$$], ImageSize -> Large]}]; $CellContext`nm$ = 
          SystemDialogInput[
           "FileSave", {
            "filename_Lab_2013.tiff", {
             "TIFF" -> {"filename.tiff"}, "GIF" -> {"filename.gif"}, 
              "PNG" -> {"filename.png"}}}]; 
         If[$CellContext`nm$ =!= $Canceled, 
           Export[$CellContext`nm$, $CellContext`currentgraphic$]; Null]; 
         Null], Method -> "Queued"]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button["Export Data", 
        Module[{$CellContext`dataX$, $CellContext`dataY$, \
$CellContext`currentData$, $CellContext`nm$}, $CellContext`dataY$ = \
$CellContext`data[$CellContext`mode$$, $CellContext`lone$$, \
$CellContext`ltwo$$, $CellContext`n1$$, $CellContext`n2$$, \
$CellContext`numlay$$, $CellContext`tin$$, $CellContext`lmin$$, \
$CellContext`lmax$$, 10000]; $CellContext`dataX$ = N[
            
            Range[$CellContext`lmin$$, $CellContext`lmax$$, \
($CellContext`lmax$$ - $CellContext`lmin$$)/
             10000]]; $CellContext`currentData$ = 
          Transpose[{$CellContext`dataX$, $CellContext`dataY$}]; \
$CellContext`nm$ = 
          SystemDialogInput[
           "FileSave", {
            "filename_Lab_2013.csv", {"CSV" -> {"filename.csv"}}}]; 
         If[$CellContext`nm$ =!= $Canceled, 
           Export[$CellContext`nm$, $CellContext`currentData$]; Null]; Null], 
        Method -> "Queued"]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {518., {294., 300.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mode$184106$$ = False, $CellContext`tin$184107$$ = 
    0, $CellContext`n1$184108$$ = 0, $CellContext`n2$184109$$ = 
    0, $CellContext`lone$184110$$ = 0, $CellContext`ltwo$184111$$ = 
    0, $CellContext`numlay$184112$$ = 0, $CellContext`lmin$184113$$ = 
    0, $CellContext`lmax$184114$$ = 0, $CellContext`lamloc$184115$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`lamloc$$ = 525, $CellContext`lmax$$ = 
        900, $CellContext`lmin$$ = 300, $CellContext`lone$$ = 
        65, $CellContext`ltwo$$ = 65, $CellContext`mode$$ = 
        "TE", $CellContext`n1$$ = 1.5, $CellContext`n2$$ = 
        2.62, $CellContext`numlay$$ = 50, $CellContext`tin$$ = 25}, 
      "ControllerVariables" :> {
        Hold[$CellContext`mode$$, $CellContext`mode$184106$$, False], 
        Hold[$CellContext`tin$$, $CellContext`tin$184107$$, 0], 
        Hold[$CellContext`n1$$, $CellContext`n1$184108$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$184109$$, 0], 
        Hold[$CellContext`lone$$, $CellContext`lone$184110$$, 0], 
        Hold[$CellContext`ltwo$$, $CellContext`ltwo$184111$$, 0], 
        Hold[$CellContext`numlay$$, $CellContext`numlay$184112$$, 0], 
        Hold[$CellContext`lmin$$, $CellContext`lmin$184113$$, 0], 
        Hold[$CellContext`lmax$$, $CellContext`lmax$184114$$, 0], 
        Hold[$CellContext`lamloc$$, $CellContext`lamloc$184115$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Quiet[
        Column[{
          $CellContext`view[$CellContext`mode$$, $CellContext`lone$$, \
$CellContext`ltwo$$, $CellContext`n1$$, $CellContext`n2$$, \
$CellContext`numlay$$, $CellContext`tin$$, $CellContext`lmin$$, \
$CellContext`lmax$$, $CellContext`lamloc$$], 
          Graphics[
           $CellContext`stackGraphic[$CellContext`n1$$, $CellContext`n2$$, 
            4 $CellContext`lone$$, 
            4 $CellContext`ltwo$$, $CellContext`numlay$$, $CellContext`tin$$],
            ImageSize -> Large]}]], 
      "Specifications" :> {
       Delimiter, {{$CellContext`mode$$, "TE", "Mode"}, {
         "TE" -> "Tranverse Electic (E-parallel)", "TM" -> 
          "Transverse Magnetic (H-parallel)"}, ControlType -> 
         PopupMenu}, {{$CellContext`tin$$, 25, 
          "\!\(\*SubscriptBox[\(\[Theta]\), \(\(in\)\(\\ \)\)]\)"}, 0, 80, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> False}, 
        Delimiter, {{$CellContext`n1$$, 1.5, "Index \[Alpha]"}, 1, 20, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> 
         False}, {{$CellContext`n2$$, 2.62, "Index \[Beta]"}, 1, 20, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> 
         False}, {{$CellContext`lone$$, 65, "Width \[Alpha] (nm)"}, 1, 500, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> 
         False}, {{$CellContext`ltwo$$, 65, "Width \[Beta] (nm)"}, 1, 500, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> 
         False}, {{$CellContext`numlay$$, 50, "Number of Layers"}, 2, 100, 1, 
         Appearance -> "Open", AppearanceElements -> "InputField", 
         ContinuousAction -> False}, 
        Delimiter, {{$CellContext`lmin$$, 300, 
          "\!\(\*SubscriptBox[\(\[Lambda]\), \(\(min\)\(\\ \)\)]\)"}, 0, 600, 
         Appearance -> "Open", AppearanceElements -> 
         "InputField"}, {{$CellContext`lmax$$, 900, 
          "\!\(\*SubscriptBox[\(\[Lambda]\), \(\(max\)\(\\ \)\)]\)"}, 
         Dynamic[$CellContext`lmin$$], 1200, Appearance -> "Open", 
         AppearanceElements -> "InputField", ContinuousAction -> 
         False}, {{$CellContext`lamloc$$, 525, "\[Lambda] guide line"}, 
         Dynamic[$CellContext`lmin$$ - 100], 
         Dynamic[$CellContext`lmax$$ + 100], Appearance -> "Open", 
         AppearanceElements -> "InputField", ContinuousAction -> True}, 
        Delimiter, 
        Button["Export Image", 
         Module[{$CellContext`currentgraphic$, $CellContext`nm$}, \
$CellContext`currentgraphic$ = Column[{
              $CellContext`view[$CellContext`mode$$, $CellContext`lone$$, \
$CellContext`ltwo$$, $CellContext`n1$$, $CellContext`n2$$, \
$CellContext`numlay$$, $CellContext`tin$$, $CellContext`lmin$$, \
$CellContext`lmax$$, $CellContext`lamloc$$], 
              Graphics[
               $CellContext`stackGraphic[$CellContext`n1$$, $CellContext`n2$$,
                 4 $CellContext`lone$$, 
                4 $CellContext`ltwo$$, $CellContext`numlay$$, \
$CellContext`tin$$], ImageSize -> Large]}]; $CellContext`nm$ = 
           SystemDialogInput[
            "FileSave", {
             "filename_Lab_2013.tiff", {
              "TIFF" -> {"filename.tiff"}, "GIF" -> {"filename.gif"}, 
               "PNG" -> {"filename.png"}}}]; 
          If[$CellContext`nm$ =!= $Canceled, 
            Export[$CellContext`nm$, $CellContext`currentgraphic$]; Null]; 
          Null], Method -> "Queued"], 
        Button["Export Data", 
         Module[{$CellContext`dataX$, $CellContext`dataY$, \
$CellContext`currentData$, $CellContext`nm$}, $CellContext`dataY$ = \
$CellContext`data[$CellContext`mode$$, $CellContext`lone$$, \
$CellContext`ltwo$$, $CellContext`n1$$, $CellContext`n2$$, \
$CellContext`numlay$$, $CellContext`tin$$, $CellContext`lmin$$, \
$CellContext`lmax$$, 10000]; $CellContext`dataX$ = N[
             
             Range[$CellContext`lmin$$, $CellContext`lmax$$, \
($CellContext`lmax$$ - $CellContext`lmin$$)/
              10000]]; $CellContext`currentData$ = 
           Transpose[{$CellContext`dataX$, $CellContext`dataY$}]; \
$CellContext`nm$ = 
           SystemDialogInput[
            "FileSave", {
             "filename_Lab_2013.csv", {"CSV" -> {"filename.csv"}}}]; 
          If[$CellContext`nm$ =!= $Canceled, 
            Export[$CellContext`nm$, $CellContext`currentData$]; Null]; Null],
          Method -> "Queued"]}, "Options" :> {LabelStyle -> Medium}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{31.346631625900045`, {6., 8.07231465051882}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`view[
           Pattern[$CellContext`mode, 
            Blank[]], 
           Pattern[$CellContext`lone, 
            Blank[]], 
           Pattern[$CellContext`ltwo, 
            Blank[]], 
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]], 
           Pattern[$CellContext`numlay, 
            Blank[]], 
           Pattern[$CellContext`tin, 
            Blank[]], 
           Pattern[$CellContext`lmin, 
            Blank[]], 
           Pattern[$CellContext`lmax, 
            Blank[]], 
           Pattern[$CellContext`lamloc, 
            Blank[]]] := 
         Module[{$CellContext`func}, $CellContext`func = 
            If[$CellContext`mode === "TM", $CellContext`rM, $CellContext`rE]; 
           Plot[
             $CellContext`func[$CellContext`lone/(10^9 1), $CellContext`ltwo/(
              10^9 1), $CellContext`n1, $CellContext`n2, $CellContext`numlay, \
(((2 Pi) 3) 10^8)/($CellContext`\[Lambda]/
              10^9), $CellContext`tin (Pi/
               180)], {$CellContext`\[Lambda], $CellContext`lmin, \
$CellContext`lmax}, ImageSize -> Large, 
             PlotRange -> {{$CellContext`lmin, $CellContext`lmax}, All}, 
             AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Helvetica", 18}, Frame -> True, 
             FrameLabel -> {
              "\[Lambda] (nanometers)", 
               "\!\(\*SuperscriptBox[\(r\), \(2\)]\)"}, PlotLabel :> 
             "Reflectance Versus Wavelength " <> 
              If[$CellContext`mode == "TE", "TE", "TM"] <> 
              "\n \!\(\*SubscriptBox[\(n\), \(\[Alpha]\)]\)=" <> 
              ToString[$CellContext`n1] <> 
              "  \!\(\*SubscriptBox[\(n\), \(\[Beta]\)]\)=" <> 
              ToString[$CellContext`n2] <> 
              "   \!\(\*SubscriptBox[\(\[Theta]\), \(in\)]\)=" <> 
              ToString[$CellContext`tin] <> 
              "\n \!\(\*SubscriptBox[\(t\), \(\[Alpha]\)]\)=" <> 
              ToString[$CellContext`lone] <> 
              "  \!\(\*SubscriptBox[\(t\), \(\[Beta]\)]\)=" <> 
              ToString[$CellContext`ltwo] <> "  Layers= " <> 
              ToString[$CellContext`numlay], Filling -> 0, Epilog -> {
               
               Line[{{$CellContext`lamloc, 0}, {$CellContext`lamloc, 
                  1}}]}]], $CellContext`rM[
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]], 
           Pattern[$CellContext`nn, 
            Blank[]], 
           Pattern[$CellContext`\[Omega], 
            Blank[]], 
           Pattern[$CellContext`\[Theta]in, 
            Blank[]]] := 
         Module[{$CellContext`matrix, $CellContext`k\[Lambda], $CellContext`c = 
            3. 10^8, $CellContext`\[Theta]1, $CellContext`\[Theta]2}, \
$CellContext`\[Theta]1 = 
            ArcSin[Sin[$CellContext`\[Theta]in]/$CellContext`n1]; \
$CellContext`\[Theta]2 = 
            ArcSin[($CellContext`n1 
               Sin[$CellContext`\[Theta]1])/$CellContext`n2]; \
$CellContext`matrix = $CellContext`MTM[
              $CellContext`k\[Theta][$CellContext`n1, $CellContext`\[Omega], \
$CellContext`c, $CellContext`\[Theta]1], 
              $CellContext`k\[Theta][$CellContext`n2, $CellContext`\[Omega], \
$CellContext`c, $CellContext`\[Theta]2], $CellContext`a, $CellContext`b, \
$CellContext`n1, $CellContext`n2]; $CellContext`k\[Lambda] = $CellContext`K\
\[CapitalLambda][$CellContext`matrix]; 
           1/(1 + Abs[
               Sin[$CellContext`k\[Lambda]]/
                Sin[$CellContext`nn \
$CellContext`k\[Lambda]]]^2/$CellContext`CmagSquared[$CellContext`matrix])], \
$CellContext`MTM[
           Pattern[$CellContext`k1, 
            Blank[]], 
           Pattern[$CellContext`k2, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]]] := 
         Module[{$CellContext`phase = 
            Exp[(I $CellContext`k1) $CellContext`a], $CellContext`invphase = 
            Exp[((-I) $CellContext`k1) $CellContext`a], $CellContext`sink2b = 
            Sin[$CellContext`k2 $CellContext`b], $CellContext`cosk2b = 
            Cos[$CellContext`k2 $CellContext`b], $CellContext`rat12sq, \
$CellContext`invrat12sq, $CellContext`sum, $CellContext`diff}, \
$CellContext`rat12sq = ($CellContext`n2^2 $CellContext`k1)/($CellContext`n1^2 \
$CellContext`k2); $CellContext`invrat12sq = 
            1/$CellContext`rat12sq; $CellContext`sum = 
            I (($CellContext`rat12sq + $CellContext`invrat12sq)/
              2); $CellContext`diff = 
            I (($CellContext`rat12sq - $CellContext`invrat12sq)/
              2); {{($CellContext`cosk2b + $CellContext`sum \
$CellContext`sink2b) $CellContext`phase, ($CellContext`diff \
$CellContext`sink2b) $CellContext`invphase}, {((-$CellContext`diff) \
$CellContext`sink2b) $CellContext`phase, ($CellContext`cosk2b - \
$CellContext`sum $CellContext`sink2b) $CellContext`invphase}}], \
$CellContext`k\[Theta][
           Pattern[$CellContext`n, 
            Blank[]], 
           Pattern[$CellContext`\[Omega], 
            Blank[]], 
           Pattern[$CellContext`c, 
            Blank[]], 
           Pattern[$CellContext`\[Theta], 
            
            Blank[]]] := (($CellContext`n \
$CellContext`\[Omega])/$CellContext`c) 
          Cos[$CellContext`\[Theta]], $CellContext`K\[CapitalLambda][
           Pattern[$CellContext`matrix, 
            Blank[]]] := 
         ArcCos[Tr[$CellContext`matrix]/2], $CellContext`CmagSquared[
           Pattern[$CellContext`matrix, 
            Blank[]]] := Abs[
            Part[$CellContext`matrix, 2, 1]]^2, $CellContext`rE[
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]], 
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]], 
           Pattern[$CellContext`nn, 
            Blank[]], 
           Pattern[$CellContext`\[Omega], 
            Blank[]], 
           Pattern[$CellContext`\[Theta]in, 
            Blank[]]] := 
         Module[{$CellContext`matrix, $CellContext`k\[Lambda], $CellContext`c = 
            3. 10^8, $CellContext`\[Theta]1, $CellContext`\[Theta]2}, \
$CellContext`\[Theta]1 = 
            ArcSin[Sin[$CellContext`\[Theta]in]/$CellContext`n1]; \
$CellContext`\[Theta]2 = 
            ArcSin[($CellContext`n1 
               Sin[$CellContext`\[Theta]1])/$CellContext`n2]; \
$CellContext`matrix = $CellContext`MTE[
              $CellContext`k\[Theta][$CellContext`n1, $CellContext`\[Omega], \
$CellContext`c, $CellContext`\[Theta]1], 
              $CellContext`k\[Theta][$CellContext`n2, $CellContext`\[Omega], \
$CellContext`c, $CellContext`\[Theta]2], $CellContext`a, $CellContext`b]; \
$CellContext`k\[Lambda] = $CellContext`K\[CapitalLambda][$CellContext`matrix]; 
           1/(1 + Abs[
               Sin[$CellContext`k\[Lambda]]/
                Sin[$CellContext`nn \
$CellContext`k\[Lambda]]]^2/$CellContext`CmagSquared[$CellContext`matrix])], \
$CellContext`MTE[
           Pattern[$CellContext`k1, 
            Blank[]], 
           Pattern[$CellContext`k2, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]]] := 
         Module[{$CellContext`phase = 
            Exp[(I $CellContext`k1) $CellContext`a], $CellContext`invphase = 
            Exp[((-I) $CellContext`k1) $CellContext`a], $CellContext`sink2b = 
            Sin[$CellContext`k2 $CellContext`b], $CellContext`cosk2b = 
            Cos[$CellContext`k2 $CellContext`b], $CellContext`k1overk2 = \
$CellContext`k1/$CellContext`k2, $CellContext`k2overk1 = \
$CellContext`k2/$CellContext`k1, $CellContext`sum, $CellContext`diff}, \
$CellContext`sum = 
            I (($CellContext`k1overk2 + $CellContext`k2overk1)/
              2); $CellContext`diff = 
            I (($CellContext`k1overk2 - $CellContext`k2overk1)/
              2); {{$CellContext`phase ($CellContext`cosk2b + \
$CellContext`sum $CellContext`sink2b), ((-$CellContext`invphase) \
$CellContext`diff) $CellContext`sink2b}, {($CellContext`phase \
$CellContext`diff) $CellContext`sink2b, $CellContext`invphase \
($CellContext`cosk2b - $CellContext`sum $CellContext`sink2b)}}], \
$CellContext`stackGraphic[
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]], 
           Pattern[$CellContext`lone, 
            Blank[]], 
           Pattern[$CellContext`ltwo, 
            Blank[]], 
           Pattern[$CellContext`numlay, 
            Blank[]], 
           Pattern[$CellContext`\[Theta], 
            Blank[]]] := 
         Module[{$CellContext`r1, $CellContext`r2, $CellContext`gO}, \
$CellContext`r1 = {
              GrayLevel[0.99 Exp[-($CellContext`n1/10)]], 
              EdgeForm[Thin], 
              Rectangle[{0, 0}, {$CellContext`lone, 1600}]}; $CellContext`r2 = {
              GrayLevel[0.99 Exp[-($CellContext`n2/10)]], 
              EdgeForm[Thin], 
              
              Rectangle[{$CellContext`lone, 
                0}, {$CellContext`ltwo + $CellContext`lone, 
                1600}]}; $CellContext`gO = {$CellContext`r1, $CellContext`r2}; {
             Table[
              
              Translate[$CellContext`gO, {$CellContext`n ($CellContext`lone + \
$CellContext`ltwo), 0}], {$CellContext`n, 0, $CellContext`numlay - 1, 1}], {
             Red, 
              
              Line[{{(-1200) Cos[Pi ($CellContext`\[Theta]/180)], 800 - 1200 
                 Sin[Pi ($CellContext`\[Theta]/180)]}, {0, 
                800}, {(-1200) Cos[Pi ($CellContext`\[Theta]/180)], 800 + 
                 1200 Sin[
                   Pi ($CellContext`\[Theta]/180)]}}]}}], $CellContext`nm = 
         "C:\\Users\\Max_Inspiron15\\Downloads\\filename_Lab_2013.csv", \
$CellContext`currentData = CompressedData["
1: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
s2+glsjT+uMom4/pbUfN9Kb7icdYfxtfYfEplp6/e5ytJzTXW/y4mEH+B7v+
3SZrLYmj51OzcfVg787Hp2eT/8Hy94GaqtNKueR/sPEq95ROp3aS/8H6A66L
ikH4LvI/ZKgt75X3bHY++R8ydEuGbpe7FJD/IYPd9r9e+ZcoPqpZfn5c13NG
2D7yP2Tgr/l6HutP/dV51g8rnduf+baI/A8Z4qzD+LmHi8n/YLy+VKy5FlhC
/ocMzu89os0MKV9dZv2SzcPw+x9Lyf9g/UTto+mV6ZSvrrLz7emur214gPwP
Vl/3VIaE3ThA/gerZzFuVgOXlJP/wfLhuVlXlt4vJ/+D5aunLeCC+UHyP1g/
pe3Q59neg+R/yHDh9a03pi0ryP9g67u7N4JizCvI/2D1YU3EITGkgvyP/+rn
56yjeyvI/2Dz29XHU+9cBfkfLD/olHAltyrI/5BheLZivuaNCvI/ZPii8/Vh
3IkK8j9Yvzw33u7jjgryP1j9dhrn5+JVQf4Hqx/2pvlt9SrI/2D9480NXXs9
P0j+Bzse41Z3r0YeJP+D5b/u2c6Rgw+S/8F+3+CUV05+OfkfMuzr/8Ijdlg5
+R8yrK5+s/5KwgHyP1h9UVOt//id6scLtj4wrHueOp94vJSh7aADg/3SS8n/
YNdHM3WNTW0J+R8yrFz24uWPviXkf7D4s7M7P3t2MfkfMrzs8Gb0VL6I/A/W
f6W7uWZo7yf/Q4YBqz68Hraa1h/vWL4qT304P/N/f/9Dhksb3JT5K//7+x8y
TDH/ZN266X9//0OGFgMKz0QMzSP/Q4bp71K6ZVhQfHySYeLcaUpv/envsXxm
8Vry5KxOKd1v/yJDfaulAQte0P3dryx+91zN1A1MJf+DXc/Fw5+Gj6f9DN9Z
/tAdknyuRwL5HzKM2Jykbdubnk/dJMOMuu1tLm+NJv9DhtdK3PpOzrS/5Bdb
3y8b4NucQd9//JbBNfkK51BA+9v/MN6nTNJfDKL7ic2sX/hcr1Q5Zw35H2z9
PzLOLimN/EElH+g6/HpZbqQN/f0PH9gx9eebm57T6O9/+MC19lmjFxeokv/h
A41bej63738Jvz9v7QPqJ7t3uvDyf/6HD7wcrLAqTjIj/8MHMj7fv3XZ2oH8
Dx+w/fxGevaZ7u+294E1+Tu9Gx+SH8XGCRdm65z5JJH/4QP/x9Vdh0XRtWEA
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
wdT/UMB3T+iUri+Cqf+hwPb/8i1MCgqm/ocCZ8cvLTT4YjD1P9DP3TWn85Zg
6n8oEBeXP1OzGcHU/8D55HbPQzdaBlP/A6/f/lsdcmUPpv6HAkc3rU7uuO4R
9T/wei66qFDjDI+o/4Hrn38UrdDIh9T/UKB58QZ9Cp55QP0P9Jwbd1j9Th6r
cX79N3j0wTL3qf+hQOurVdSfbWj+WIvzn+eUmh8G3KP+hwJltM9z8wy/S/0P
BdzLd9nqOCCQ+h8KpBU/7/m4zR3qfyjQ42pwC8cKdP+xCY9vxKhvKSk0n29W
YFuOaqf33w2g/ocC17bNzIPPjPof+Hqda/460N2f+h84fzRY+7vwv/T+1XZc
H1VZXTvzomvU/1DgUqvUEae/eVP/Q4Fbd65/Gj/0MvU/8PxpUfX9qccXqf+B
1+/M6ft69abvl+xRIFeL1yv7vztD/Q+cv2p7eXwtSOurfQo89D7sXGSrJ/U/
cH0xuku+f4ccov4Hnq+3K+ZdPzm9/4H+7Vd327eP9qM/iOPtkmpxWWrQ90UP
KRD+tklKq2KrqP+Bx8c7h+sQz0XU/8D5tNjhB3dbzaH+B6439xVtmWPBaOp/
KDCh0dalmif9vqWjCvhXTt0UUfea8fupj+HjXY4rOX5lS+p/4Hx2esouN1/6
PsMJBbK3apIlV83Z1P/A8WHzPz9KVF5E/Q8FhnyLu1I5hPpRp3G8XTfgQ8OW
G6n/ocAihxytJ2TfQf0PPF+zBRUt/GIf9T8UUCqNnpSlyGHqf+D6akXhdb/O
0/fbL+C/n1r4Z4ODp6j/gfNxQZ92I76dpf4HjoenWzgeOHKB+h/4/HIcu3FN
uUT9D/z5z5eKlRxFn39g9qhbcWeffteo/6HAvI8J8/JX8aP+hwKP/eqHdzzq
T/0PXM/O//EnsTLdD/rgevTy8SNxh28aHtcUmJVp9IJqJW9T/0OBzWmXkkLW
3qH+B76+fF0HN04OpP4HeiSNfxUx8B71PxRI3hBQZtxJWl/dwOPtUrHo/oT7
1P/A9Wi2wWsW135I/Q8FzC96Tagw7BH1PxQY4J1lxNDmNF7dxuvTL+BXh5s0
Xt3B4+ef1zdHm8fU/1Agd7mBjcZdeUz9D5yPVvX1KFMphPofeD8zJ2dAAfcQ
6n8o4F2z1JICn0Ko/4Hr1cgDKRmahlL/A8/P9+/bBiwOpf6HAtNX/tnb+lYo
9T9wPA0bs31Kaij1PxSo7/2od42qYdT/UKD9wYgP87qHUf8D1z9v9kXBpDDq
f+B6Lu+jt/OUMOp/4Hi0aXz7/yxh1P9QwHItV2KOhWHU/8D7h6bj+vWYE0b9
DxyPimduFj48jPofCry//brUrpZh1P9QADY7d99QOIz6HwqEJjl0Of8ulPof
CmzcO79bskco9T9wfe9S4d3IkaHU/8Dxpu8Er5i8odT/UKBCxBTz1osh1P/A
8yNgbcHZvUKo/4Hr0YKnrq96Rx6RCnRwnXI0aQp5RCnwvGOxBS8+0/zxVoG8
P9K6DhtJ88c7Bb6e8M3hsv0R9T9wfAmLnO6K47nR/8D1UfkcUXMKP6D+hwL/
Jldf1MMniPofeL20SDlVsA/df3xCz5NLB2aKoPkc846TfRtsHniH+h8KuM46
FOB27xb1PxT4mGeo1526N6n/ocC+77tP7dtC77d/xfHvaeOgLQl+1P/A6+dW
uzWJHr7U/1Ag9nEfLWz8Vep/4PkS5Th1SZ3L1P/A499ydPGueS5S/wPvXzf1
yPki8znqf+Dj2wrOm9XkFPU/FBg67di/w657Uv8D5/tijf+rdpS+D5eA893x
ks9f5qO+82/8+5Asqye8oP3PExUoknFg9Nod1OdMwuuvQcSMUTmoH5WMx6OG
V+kbk2ZR/0OB4GfbbrcuOJj6H+j7LGjmWOfy1P9Av6sbiw++Q/vjpOF662nv
XQ9fDKP+B77+4kdvd2k4h/ofCpz5Hnt++Qr6PlwGFcLb79ja5cta6n+oUKOF
19mRa7ZS/0OFOZfvBTk0o/kjkwrVdvfZUqErff/qHxUuvHlfccCnY9T/UMEd
elxovJC+355FhbW/zjbz9j9P/Q8VLvZUsyXWukT9DxVyTm3as8ENb+p/qDCp
gU/FDzN8qf+hwp8vhyKGFaH78xwquHzoOXuale7Pc6qwdN9zZWb0Tep/qPCo
eY+nGR/Q+4m5VfA/VK/cP6cDqf+hws8r61I8V9yj/ocKTXLn/OAy+D71P1So
OaLSwMalHlL/Q4XSTikdc+H6zuh/qFDJ/VcnD1+6PgqqkCumf2jQisfU/1Bh
d1rxQW+7hFD/Q4WogYN6z8hM41VhFXKMXZk373karxxUOJk57fbMAWHU/1Dh
3TyT/8AfNF5hTiljObtx4RPqf6hwY3BAU2vmp9T/UOH28tEXzPOfUv9Dhcef
NhSwfX1K/Q8Vdv0s7+jS8xn1P1TIWGvTlaeez6j/oULc2947Svx+Rv0PFV6H
e0S2bRRO/Q8VAhw7FOk4I5z6H+hXMUOXsjvDqf+Bzy/7pxYProZT/wMfr3qh
F/A4nPofKlzf3fHYrJfh1P9Qod4Fr7X9XoRT/0OF57k3rXz+IJz6Hyr0T3M4
8eViOPU/VNg7oU111w3h1P9QwaGDj8fIMeHU/1BhY8fkResqh1P/Q4Vy9ZMX
x0Q9o/6HChEP7u7rvvYZ9T9UmGurHn+g9jPqf+Dxmn02X9Ctp9T/UKFTnuUr
TnV/Sv0PFba5137SOOgJ9T9UiB5wfNXIpuRRR4WVxwvmLL2X5g8nFTpALXfL
71Dqf6jQccaE0wdahVL/Q4X12+YvP70whPofKnTL+rzaj/OPqf+hwvCJNu8H
L4Op/6HChhPTH+z+8Yj6Hyp8r73Lo4fDQ+p/qFDAe9h816r3qf+hwuc/UfPa
1KD3S5qqEBZ1dO6IsoHU/1ChVN5+FX/nouujuQrBWmTF699pvdtCBY8+oUMy
h/hT/0OFuy/a9e84hT6vBRXGlhufWrz1Vep/4PGZlWeJaz36/KO1Cvubndnm
1IO+T91GhdiGrzOGtjxN/Q+8Xg83n9Z7Er2/204F6wRT6RYN6fPz9ipYCmdK
u7OS+ucd8HjeSv637VD6fWQdVSjxMGb08woW6n/g9fbljTWT/3Tqf6hQ1+l0
lj67OlH/Q4X7G34E/PLLQP0PvP6rH3XtNo1+H3JXHG/uuVRZ+476at3weBc9
kSO5/TLqf6hw9tzQ2LYZNlH/QwUldErg0ul7qP+BryfJ7Wq70dQf7IXj3daG
qw9PpPvz3vh4ntm9Njqco/6HCrUWeDWb1JW+n9gXx9v45OgfAd7U/1AhJld1
xwEzrlP/Q4U3u1aVcShN9x8DVHgae7zK2E03qf+Bf7/7XsWGeej9q0EqZGlU
a/2tZXep/6GC+UZ0ubcpQdT/wPMhTN2TcfxD6n/g61kx5HDxUXQ/OAzHoxph
vXYtfUz7f+D1lrbTq9SBEOp/qLDPLfXC8nO0vhqpwvszLQbGe9F4hbnGhBmX
z5+i62OUCiuaBH5ou53Gq9H4/Aa4O3R1fUb9DxXWBExsv7pdOPU/VMi/JKlz
dNbn1P9QYUjLt+6dvJ9T/0OFdv3D210Z8YL6HyrUnl2jX5vEF9T/UGHV2ma7
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
3+OuD1diNvofeP7HBsJ+zEb/Q4NTd65mPI/Z6H/g809tV9Yfs9H/0GD0sAHO
9zEb/Q9cTzhoy59gNvofGgTn2/U2ArPR/8D1Qtl6L9/ayOMwzh8pBbw/2sjD
A8dPpeelLzbyOILXxwKrNdZGHp4azFz29fwPG3kc1aDewms/ftnI4xiuD+ub
HybYyOM4rp8aPR2SaCOPE/j49TN4JtnI4ySuVxrP8022kccpnD+zrPP8YyOP
0zjeZn89LcVGHmfw9fbYXCjVRh6Yd364t///2eh/aBAddKJomo08zmlQ68LJ
BWnpHuc10L4feZqW7nFBg3cuyaWt6R4X0XvCjpHWdA8vXJ90qrXVmu5xSYPr
AQ63rekel/H/26XEWtM9rmgwZ2GP/LZ0D28NWmScUMuW7nEV13PlZnaypXv4
oO/NTCNt6R7XNNiQY8dsW7qHrwaRBQ4stqV7XNfAI81loy3dw0+Dni5j9tnS
PfxxvXv3xHFbuscNDRacX3nRlu4RgOPJ3Rq+tnSPmxrc87t+y5bucQvXC85j
79vSPW7j9Xu+SYgt3eMOnn8Vhj2zpXsEarDV9+1LW7oH5sAhb97Y0j3uapBa
a+w7W7rHPRxfyy+MtqV7BOH4Uh1ibOke9zW4uOL0F1u6xwNcj2QL/2ZL93iI
64XaN+Js6R6PNDDNdflhS/cIxvulEUk/bekejzW4ub1nvN0jBH++rFuC3SNU
gzYDN/22e4Th88+3PNHu8QTPt2OjkuweT3F8KFY+2e7xTIOGtsfJdo9wvB88
MO2P3eM5rpdzJP+xe7zQwOUf1xS7x0tcD5SOTrF7RGhQOLBzqt3jFY7HDQ+n
2j1ea1B86e9Uu8cbHN9PtUyze0Rq8NR9UZrdA/OLDz5pdo8oDf5M+Jlm93iL
8++psla7xzucz9p0t9o93uN64qCL1e7xAefDJtutdo9o9J1yxWr3+Ijj/9qn
VrvHJ7xf+fndaveIwcd/md1m9/iM64WVJW12jy/49/WdbHaPr7jey9/WZvf4
hq+nY1+b3SMW1y9ZxtjsHnE4nk91ttk9vuN6f7dms3v8wPWL1zKb3eMnji8h
6212j18aOGXfabN7xGtwYdpBm90jAdd7hY/b7B6/8XoseM5m90jE9ZPLZZvd
I0kD706+NrsH5mO7A2x2j2QN7muBNrvHHw1O/Lhvs3ukaBCW5bHN7pGK14t/
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
efRiHr2YR2/m0Zt59GEefZhHX+bRl3n0Yx79mEd/5tGfeQxgHgOYx0DmMZB5
DGIeg5jHYOYxmHkMYR5DmMdQ5jGUeQxlHsOYxzDmMZx5DGceI5jHCOYxknmM
ZB6jmMco5jGaeYxmHmOYxxjmMZZ5jGUe45jHOOYxnnmMZx4TmMcE5jGReUxk
HhOZxyTmMYl5TGYek5nHFOYxhXlMZR5Tmcc05jGNeUxnHtOZxwzmMYN5ODMP
Z+Yxk3nMZB6zmMcs5jGbecxmHnOYxxzmMYd5uDAPF+bhyjxcmcdc5jGXecxj
HvOYh4l5mJiHwjwU5qEyD5V5aMxDYx5m5mFmHvOZx3zmsYB5LGAeC5nHQuax
kHksYh6LmIeFeViYhxvzcGMei5nHYuaxhHksYR5LmcdS5rGMeSxjHsuZx3Lm
sYJ5rGAeK5nHSuaxinmsYh7uzMOdebgzj9XMYzXzWMM81jCPtcxjLfNYxzzW
MY/1zGM989jAPDYwj43MYyPz2MQ8NjGPzcxjM/PYwjy2MI+tzGMr89jGPLYx
j23MYzvz2M48djCPHcxjJ/PYyTx2MY9dzGM389jNPPYwjz3MYy/z2Ms89jGP
fcxjP/PYzzwOMI8DzOMg8zjIPA4xj0PM4xDzOMw8DjMPD+bhwTyOMI8jzMOT
eXgyj6PM4yjzOMY8jjGP48zjOPM4wTxOMI+TzOMk8zjFPE4xj9PM4zTzOMM8
zjCPM8zjLPM4yzzOMY9zzOM88zjPPC4wjwvM4yLzuMg8vJiHF/O4xDwuMY/L
zOMy87jCPK4wD2/m4c08rjKPq8zDh3n4MA8f5nGNeVxjHr7Mw5d5XGce15mH
H/PwYx7+zMOfedxgHjeYRwDzCGAeN5nHTeZxi3ncYh63mcdt5nGHedxhHoHM
I5B5BDKPu8zjLvO4xzzuMY8g5hHEPO4zj/vM4wHzeMA8HjKPh8zjEfN4xDyC
mUcw83jMPB4zjxDmEcI8QplHKPMIYx5hzCOMeTxhHk+Yx1Pm8ZR5PGMez5hH
OPMIZx7Pmcdz5vGCebxgHi+Zx0vmEcE8IpjHK+bxinm8Zh6vmccb5vGGeUQy
j0jmEck8ophHFPN4yzzeMo93zOMd83jPPN4zjw/M4wPziGYe0czjI/P4yDw+
MY9PzCOGecQwj8/M4zPz+MI8vjCPr8zjK/P4yjy+MY9vzCOWecQyjzjmEcc8
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
KffA/xCpzdTAcXqGj8H/EKncPSy8qNMT8D9EGjp6a5tPKoHgf4hks6bqdVub
l+B/iDThadrc+fbh4H+I9ETR9nLro2/A/xBpexPzRe9MI8H/EMl/yFXtdZuj
wP8Q6eKH25MOrYkF/0OkB7HbdyS5xYP/IVL4LYvtI3olgv8hkvrtK/r6UhL4
HyI5ftCZFV+O/cSuIrmHee7eOBP77awdI1z9+l9KA/9DpM1d2v9cl5wO/odI
GskHmnm1zQT/QyTDHDkrcmIW+B8i/bAPaXp1ZTb4HyKZzAxY12t7Dvgf/O+l
FXfctxvzeQ/+/E+j2iRvzwP/Q6SWk48/C1NDv9tTJL2XKxdtv5UP/gc/z5V5
xtatC8D/4Ofp8iZ4lVkB+B8izak987lpYgH4HyJ11J3nFTS6EPwPkZY1uCQ+
kwvB/xBJd/SND8MzC8H/EMmi4+ZQGlEE/odIu4aEJY05UAT+h0jf9/WdPTSo
CPwPkYbLu60W/y0C/4Pja5PlwjRN5CvWKXruKyqOFIP/IdKA64anHvoWg/8h
UjP/Bp855cXgf4gUtMI9L6t3Cfgf/LxTc9tfWID5Y6BIP416rT/ROH+wrn0Q
0yvSGfu7g0RSMbwaav0O/RXrC8XOPfJr0V8NFsn8yfcpBZ1Lwf8Q6WFrtftu
49BfKfPzcxqxftZS9FesqxxKM2J3ob8aIpJv88cT1p4tBf9DpJD1rTV+OZWC
/yHSy84fFgQ/Q/1gvXPD7uDH0agfKiJZOQsOJXmoH6zzbSdkbPuE+jFMJLtx
5QazmmK/hPXEwSXfLDtiv2S4SE10el1Q5/7uf36wbhXSuu3KYWXgf4j0YbeC
2Q/1MvA/RPLuapU7aEoZ+B8iHWupeCdtBuZBVZE+f341bMBszIOs7ylpKf+Z
Vwb+h0hXPvkfPLiwDPwPkUzV1WbaLCoD/0OkwZeDa4n1//M/RDrkvHb49QVl
4H+ItDXhV8mludhvZx1jo2I6elYZ+B+8Xu4oLdilif1E1p9NJmzVnYh6Pkak
gO6TPkaPQj1n7TTtrlmFMuq5ukiaG3++uNMT9Zz1q69GTavbop6PFUn72if/
d3/gB2ul5jdcNGrhxziRjNa6FSrnwA/Wz6f8zrB7Dz80RFL42DDp+NNS8D9E
uq2s/TWZ/f6fH+NFmna0eKG9VSn4HyLd2FUV4mdWCv4H59PpBu1V9EvB/xCp
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
l8nuc0NB8FTcL2E9+mDWtWaTsH/F+uMEjyWa47B/dUOmqSe1Zu4aif0r1qpd
BYfLQ7F/5SBTvMb5U179sH/FumpcYceQbti/cuR64e+z6XUbnNeynni319nQ
BvhxU6Y9NWZWvl/gB2v7wTd2OJTCj1v8/VuvGno4Hee1rB+s8PVb+A7vD95m
v84YtlBi//+f/yGTNHtAm2QP3N+9I9PRQcs8ztrj/u6d//aHVoePs8wA/0Om
W2OGTk/chfmc9ZYTUZ+NV2M+d+Z6ZNA5/KM25nPWdzd3FPeoYj534f5USOtc
1BnzOeu5cUN0Fv5AfNzl+uHW7atHDuZz1uXqFb9/hGE+d+V51y1lkpYb5nPW
N3cmy4fOYD5nHSWdiXLdjvncjevbTuWaN/Pw+yWss55tSc8cht8vcZcp773t
6SJF/B4Aa+33Fvl5hZjPPWQShob8jgtJA/+D89dfxzy/G8hX92Qa4mTmarMf
+Yr1DP3o3asWIV/dl+lQarhZjyHIV6xrJaqK+pUK/odMGSE7xxyMTwX/g/tD
w15OXd1Swf/gevZghp/HYfxeH+umH62/jF2YCv4H/3mnj039+uJ9TtZPdupf
U6vB+5xeMlkMniPfDMb7nP9H03nHc/m9f7wo0VZE2kqlralBR1OR0aCBhopI
SaFBU+/7vt+K7KxIMkIhkb33KpRUSruoaFFUftfn93315/Px8dHb+9znnOu6
7uucJ3Giw60MKdcH8H+I2IKklJXWm/H+nPjXfD+d8gl4f35LxKaFuAyf3FYH
/4eI7fOOG3UuDe/P4ym+rV3S0ngO78+JRy+3WbJIF/V24ufp0d/9h6LenkDP
d9dd5e4GvD8nbt/8Q2J/CPqpE2k/O+/e85U57t8l7pn8JGPvpFr4P0TMaVdU
n84PNfB/0PMdG9wSElMD/wftZ4fDY7btr4H/g+L7hg1Fs6ZhP79D+eLY3T+V
W+7D/0H7zSKVpfOjcZ9MMsXbxR2PD+zF/XDEecFFhveV78P/IWIxE04d2vUM
7z+IVc6I1k/yx/uPuyI2yUF1q8qGe/B/iJhncC+NXf3hN0il72NWoUSJgP5E
4l+KIyR3/cJ5tTT69+cpPw2xwP2JxGu/14a411XC/yFiuRVL5RmrhP9DxB55
XczIuYH7qTMoPhlaXDNOrgL+DxE73bRz0xEn3IdMfKvsTO+yV2Xwf4hYtf5H
q3lry+D/ELGE2PCHpbdK4f+gvydh8p5AObyPIg47v7JH9tES+D8ofntzYsfa
p8Xwf4jY5rbmARuXFsP/IWL3k+/u+HYV52uJZ8a1nma90C+aS/FEW/GejXsR
7xKXxG6o0y7B+cE8Gv9P503VpxTA/0H/3nLXbZoX8uH/oPk0fP9nh8/wTRAv
+9LW8dcgD/4P+v1FOcO+386F/0PENCfeDj2ikAv/B+XPWvpBISfwfpDYQemN
nWpuNvwflB84zPV8fyEL/g/K74/5WmZtzYT/g+YnN+31pykZ8H9QPqRo/Svt
D/KPEppfnpyrVS36d4kXiodvWBZ7F/4PWn+jv+bxfAr8HyIW/XZOi4tlMvwf
IpbvHr31pO4d+D8on3587G/GXNxnSbzv4vwewjj0t5fT83bCPGzKUPS3E0d6
8iOaZRLg/6B8yuX9wUFS8fB/0PN44YtXwaCb8H+I2G8X+2sbxsTC/yFi2c2z
pbYsvgH/h4ilPH4ptWN3FPwftP5pNHz8EhAB/wd9XwvTw32eh8P/IWLTX3tY
Vs++Bv+HiDnfDrAY63MV/g+aT3mLDkj1CYX/g36/15+RHbLB8H/QfmSo4tUy
PwD+D8rHwjXsK5394P+g33fgu8jhnTf8HxQPpC11TD7iCf8HfZ6zccvXT7wE
/4eIRYheL+/T6Qr/h4iNMFd80faVg/9DxOJyPc3C1V3g/6DxYq09dCpOw/9B
683J95VvTdHP8JD+/he1e8bl28P/IWIvhxR4fiu1hf9DxDaVmQaEvbOE/0PE
vqy/Mf3duZ3wf4jYJ9X3w8weGMH/QfFGoFP/j/Zr4f+geCRwjK5rszr8H5QP
LnjoHGs8Cv4PEVOv7TPryKJizf/5P2j/XZ0itUXUD/4PEfu2URSfKq8G/wfF
P1KlWaOFFfB/ULx662vlqwfr4f+g+C6tx4aK76bwf4jYa+u+o5oq98D/IWKn
tGI1VV/awP9B80955bNK/8Pwf9B+vOR+zZDnR+H/oPhOd928iKyT8H9QvBwh
TOkfiHpJE+Wn56su7R6HegnxtZ1pqj/aBPg/aDz6vXvEpN3g/xCx7VXbnz6e
7QH/B+VXa09PqT/nBf8H7X9bljsubPeB/4PisdGm5qOEy/B/iNggT9u7vosD
4f8QMWv7B0MT+1+B/0PEhgdvKE1zxn2vxLeyJmXbSobB/0Hjp7rL6afvNfg/
aH8PbdxQueA6/B/0+bwG3LJ8EwH/B8Xn/U7vXBYSBf+HiClsf9R5b/cN+D9E
7N3ojmHieagnvhexpPy+sS8H34T/g/ITnbVG+u234P8QsUbXSwZhX3GfPvHn
cZURgZ8T4P8QMd+nrWurPuO8AbFeQ+38H19vw/8hYuHv7z4v70yC/0PENJQ0
NgyUSob/g55v5aj1x+RS4P+gz+NxZn+ZCtYr4pSvNnI5C1Ph/6D91towdbhB
GvwftD8fvdvgZ5kO/4eI7dIVD/t9FvVdYvV8mRUyIei/aqX8pOe0Y+cysuD/
ELEA0bpRs57g/HkbxZcDJ3daOefA/0HxhcjX+8qAXPg/RKzZyCVG4Uou/B80
f+ytStJn4H6GrxS/1ZbMOZSdB/8H7a8jgjtGG2D/+Eb55acFL2Kb8uH/ELE9
P46elTxUAP+HiK16cmx2/56F8H+I2NWs+AEJlwrh/6B886Lnj6djUG8nvumS
6X7iZhH8HyJWtiFpxbEl6Icjzu5S08wvLYb/g56ngNF7VhuVwP9B33/VtO3f
X5TA/yFiDwMnXUjdD98E8Y8hPyW49lL4Pyh+6dzntu4U9vNf9LyYJEf/lSqH
/4PW38uPnS5cLIf/Q8TG6OY9+jAE92UQ249fO6evXwX8HyKWrDDu2ovhlfB/
0H5XdvHJ7sBK+D9oPXg4crIwogr+D/r7fi6xXBFQBf+HiA31qOx7UQH9icS9
zl+T2eqF/sS/ImZm6GJ3Xwr39f39r94fVD1zOfpLuml/Ym3bCk4iviIe+Kza
yzUV8VUPjjl+KJ1+9hviK+KhnL3i9WnoL+nJsVLFZUe/7EZ/CbHX73XXdwfh
PjIJjnmuWan6u+Y+/B/0/+utybwjjfdRkhyrcX2x2l0D76OItz5pfyw6hPdR
vTi2zLAhISAc5z+It68ynFn6EOc/iPd2pj8ZLI1+0d4c26g219xWHfEu8bS2
Iq+3Foh3pTi2MDNpm50v4l3iqybZxUMKEO/24VibrkvP4rZa+D/o8/56tc5t
JO5PlOZYzG37fparcX8i8cFD0gkbDtXB/8GxufNnVRgEwAdJnDimqdssrw7+
D469+jpY8uSHOvg/OPawz5GQuEF4P9iPY3Z2s+M/zX0A/wfHJky5O1ZzywP4
PzjWPMy15YoT7kMmnpYzffjgEOQfAzims2tAtkcO8g/ii8tP/B3/AvnHQI7V
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
wH9OrFofLeexugT+D9p/5x+U/JheAv8H7XeD7M8dmlkK/wfHhhxaZ6wQhvdR
YspHdj+5UTu0DP4Pji0N05cNdsH5KFeOrXo3+JzVd5yPIn5v4bltjjnOR13g
2JQEJePWe4iviGXWOV/y1UD/7kWK7y1KT46LRv8uccvm1q/8UNy35Ebri9J2
+SKnSvg/KD5wuGpe8xrna905Vhb5KS5Spwr+D47d7MiQYwlV8H9Q/PTaVMpX
vhr+D47JqfJLwo/iPn0Pmh/tX1P3PMb7QeLQ1R2vrEbh/hJPyhem9ezs0EW8
S/xJrUTq0QnEu14cuxOfLStzA/EuceX7H0yoR7zrTePr3VZv1Av91MS3Gy7O
t52Ffur/uP5Dfe029FP7cCxLdY3hadF9+D84pi1IGx6Jvw//B8WHDz2Cbzbc
h/+D1psYI7kZEjjv7Ef78fV7UV9U8b6W+IUrZ/7TAO9rLxObjdqp5Yj3tcTG
J3fcLw/C+1p/2k+em7f75v7zf3BM3jF4fNgb5B8BHLMo7Zv5UboW/g+KrxK2
zXeYiv6rQIqPd44fovmv/4r47sVBL5YfQP9VEM2nEhUtzg39V8S63VKNfW6i
vz2Y5s+ghdaFFehvJ360wyEuuxn97Vco3xFJ2rb3Qf8V8Ye7fYV9E9B/FcKx
h3P/1Csy5IPEww06V/TahnwwlPa3ZUtyptojHyTOOyPWcndDPkgsdyWheEYk
8sGrFK+f6bG5bzbyQWKHnuV/xj1EPhhG4xPxpdT+I+6TIa4VDtT0lsB5tWsc
26j5Tq1mGM6rEXdfWd7nyRTcJxPOsaH719iP1cR9MsQV15eEhRk8gP+D8t2T
Lik7d+G8AfG9ho0vTA/jvEHEf/GyiZ7fOZw3IFZ9YT9zoBfqiZH0/bvvSMm7
inoi8ceWo0p3biE/j6J4Y8tRtzcZyM+JP8YuWLuxFPl5NMde5dmf7/kA+Tnx
7l9Xj356jvz8BuU7226YKDYjPyfec77S6uw35OcxHCsYY/t06m/0wxG3vv3R
LNcL9cRYWj+mX6nW6Id6IrFfqXl+hCzqicT1u5r+6iugnhhH86nvnLSFI1FP
JE5Qap62eyzqiTcpP1rbdrF6POqJxK8/Ow11moh6yS3K57f1+bZvMuolxLyZ
xk5/VdRL4mk/K/nt0XcK6iXEPSQM7maqol6SQOMVYCN1ezLqJcTeDWlxzRNR
L0nkWPvK+892T0C9hLhRkSsdNw71ktuUX1/vDBo3CvUS4t7RodxuRfSXJFG+
JdqU0jwE/SXEZpaHtiT1x/0Md+jz6T4PyO2N+xmIH/+cHzXkL8YjmeL72oa4
yB8YD2KbuCGPTn/EeKRwzN1efcOVlxgP4t5Pa3V6PEJ/4l1aP94Vf46o+Of/
oPVV5LzPM+ef/4Nj8+SHNOfdRn9iKscK3/Mh6hEP4P+g+fKiO/WbH85zptF4
Sb6z+s7jPCfxAdXFbxYdw/xI55haSb5psSXmB/H0+g39AowxPzI4durZgEm3
V2J+EI+cE/NxyBzMj0yONVkUBaSOwfwg9uycfDiyH+ZHFsd8145Mf9qOejvx
toeZ6Vte1MH/wbFpFUZ5o8txHofYsCt57LQknMfJ4VjgOK/pZ4NwHod4Stjb
FeNc0C+aS+v1jc0lMtboFyW2rgofs8QQ/aJ5FK8o9km9Ox/rFfHPgBiZ0yOw
XuVz7P7pcW6e3ThfS/w09H5Z20ucry2g/SbgqG5gIc7XElceCY/yjKyF/4Pi
m8x5J+t5vP8opPV9/mt7q314/0H8p6tome4avP8oovEa0xTmPBn1K2KHnJjt
3VKoXxVzbJNLol7Na+wfxCMOj1nfkYv9o4TieZUtWw5ewf5BfH7mlZ2Lj2P/
KOXYm4xwB5NN2D+IVXU0btfOxP5RRvur6U+tMBnUr4izR1Sblr5Ev085xwZl
VK1fm34f/g/KTzyKTk70Qv2qgmNbPX4abrdC/Yo4ckWFfjtD/aqS1uN75wZ9
Gob6FfHZrq9LVn7Efl7FscE91P175GI/J+6ut+8a64P9vJrys3p3wyhL7OfE
A3Tehl5ejP38HscmVw7t833APfg/OCZSMrI/lo36FXGZzgeF5p3op77PsZxd
W8o1JXGfPvGGk6cCna5Vwf9B43VqQEXUsir4P2g9bpN4XNKE+lUtPd+jRju/
dMb7QeJ5J7Wju4bj/WAdPU+b/7gr3cH5c+L1l6OvrtRHfPWA8sePku7n3pfD
/8GxkKRta5+cxvmohxwr+d4ovVGxHP4PjimnVy3/cRP3w9VzLO3ZndSiFbjP
kvh4nvPBew24z/IRx1KDzyYoHUB/O7HZ30tyN3uiv72BY4t61zh4eeP+EuLT
Jdd61E3E/SWPab0/Y6Jy7C7e1xJviGy/dmEN3tc+oe8nN5xTfIx4l/hn89rJ
k6yK4P/gmGni0yn5v3AfAHGUVfCZDr4Q/g+KJ05r7a9WKIT/g+br28+ORhEF
8H9QfjZixKnLcwvg/6Dn88+K6Kt5+fB/0Px7wFudNMiH/4Nj0p/7n1v8DOcN
iPcor/z7xjoP/g+OlVb2m+36C/e3E4/ycctU5/D+/AXtV1cH8L/lkH8QS7y2
zn4dlgP/B+3/f9weds/Kgf+D1k+7EX1ST2bD/0HPr4/xiaFB8BsQ5/9e7jA9
LRP+D45F2Jg3qjRkwP9B6+dJqb4jf6XD/0HP87ig/JlK6fB/0POyw2fhmSVp
8H9wjCt98nvWjlT4P2h/7mj4uf38Xfg/OPbOe9j+mbEp8H9wbMbOXU05dehn
eE/7zUN/5fndd+D/oPynrWthwlT4a4k1+ypu37gVfrUPHJsYuPGrlutt+D8o
n/olaxeUlQj/B8V7b6xtRd8T4P+g9fFJMK88HT7hFlo/Bw3c6GUZD/8HxdN1
fbLa192C/4Nja9tGLeq8h/tFiUct1k6z3xoL/wfHyms+HY9rvgH/B8UHbVM1
35xBfv6Z1peJYbN3jEX/FbHN3RcNO4rQf9VKvN/98+Qj1+H/4Jh5s/baX6rh
8H9w7Nhns3LZ92Hwf9D+ZuiwKOHmVfg/aL79UJ4lfzIU/g+KT+vH/PgWewX+
D8pHMy5JzbMNgv+DY1p/rK12rAqA/4PGa3tN4ZuZuE+GWDbm1Fa16b7wf1C+
n9JdF6OJegmxLvd9RNpuT/g/aL/c6Tc2M+QS/B/0/Bks2Tm+CefViMfYmniN
jRXD/8GxLnfpxuHhHPwfHMsoauuKK3GB/4P2F29pRTuls/B/cKy6K+vbyzmn
4P+gfN9AwXWr+3H4P2i+va4+oq7tAP8HxybdL2zduN0O/g8a/8XbRr+5YQP/
B8cuZJy+fcLIAv4PWn8rz7z3z9sJ/wfHdr1PMXNu2gL/B8e+VYWsc8gxhP+D
Y8Vr5z4t0V0F/wetz5cequfpqsP/wbFLw2yTZi2eAP8Hx/pPd1DbtrcH/B8U
j+Y2J28MStX8n/+DY1+zOo9s7SML/wft965mV69JTof/g2Prfl3uPFynCf8H
z+IDHMwD/NfC/8EzJaVFW/k9G+H/4Fl/g2L9n79N4P/gWde6n3sW8Obwf/Ds
l0Onw2G9ffB/8JRvNxw5V30Q/g+eZd3rdbTE5TD8Hzxz/JjvqOfsCP8Hz/gP
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
/mm9x8H/Qft7umLeS1vcR0b82b9gp4TaRfg/6PnQe7Ngp/Ql+D8on5uq87mE
84D/g+J3mTRfG3q+/+f/4Nl0u5qtEkne8H/Q9+enZKm+A/ODeOw99QHZSpfh
/+BZi7tV/fJX/vB/UP4SMSHeLjUQ/g/KP4aVd/4ICob/g+KXpgOJDhdD4P/g
2TeFnOV6haHwf9C/15jwV6rsKvwf9P2M/rz8bl0Y/B8U32wZsXHuG5w/j6f9
uO+w3uu6wuH/oHhZd+692mG4Tz+BZwZyRk3+CyLh/6D4fWz6GFvTKPg/aP6n
X145iY+G/4P+/eP7Xrmn3ID/g8b/zZdDx1ti4P/g2fB3301TxsfB/0HPg7OX
nMKOm/B/UL7zbcMgq9Bb8H9QfDf+7UFmFw//B/28h8OoYcMS4P+geO/H9zNX
0hPg/6D8qtp0at6uRPg/6PtbOrp0Xz/cB5BC83Xqp1kn79yG/4NnB1UPmr/f
kQT/B61PvuGXPAbcgf+D4nmHcSPN03F/YirP6psGXl1llQz/B8/GDG//oaKU
Av8HxW8jNs1qKcP97cTr5/yJPO2E/vZ0nu27s7jz3oxU+D94Zmlf2b/4RSr8
H7T/RQQP1vNJg/+D4rcwAxfDNXg/mEk/XxU4P/MP3g8Sp0lZazsnZsD/QX+/
5IMZJy0y4f/gmanP86TYkVnwf1B+Xyb358f9LPg/eLZ0b/PZ1Vw2/B+0Htv/
vbh6dA78HzxL93F3ajyaA/8HxSPTQmtNanGfZS7FC4ly0pnTcd6AeE6WkPmD
w3mDPPo+Dl4o+vsC98MRiypzJtxbDL9aPsVH9e3Su3zwvpb4fteM2tjPeF9b
wLPHiW5DolfjfjhiY9lV5/VD8+H/4NnRd3sV/X/Ct008X//mu5MGuC+jiPYT
PS2Nzkjcl0F8erGpR6/uAvg/6Pfl/hb8NhXC/8GzVx8PdcbGFML/wbNTeu0v
NXsWwf9B69s5NdvVRrhftJTy154pnTk3cP6DOCr1hFTEX5z/KKPxmL5i2RfD
f/4PWu/8+nHB4Yh3y2n+Re2uv96OeJf4nmedWW9tnHeuoPg7efKhlMsl8H9Q
fBdfLKS8R32X+ODYv2t7qpfC/8Ezr+TVzpdEqO8SJ0r5DNxZh/puFT2v591k
D45Dvyix+6gHGck2qO9W0883Mqu5qajvEs/4M8r3tST6Re/xLCDL8ln+OuQf
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
YcC8iXd/af7P/yGwSWe+Phz+bAT8HwILiXC0SpCbBf8Hff+pfRK02pbA/0Hr
vfuoEwfyV8H/QfM78qjpBHsD+D8EJs9GN82zN4L/Q2CKxi0V4TtM4f8QWGeF
V4VE4C74P+j5mm1o/PrXXvg/BHaz7+BToyqs4f+g76NqTeRO3hb+D4FNl098
st/8MPwf9Pv5jB/RDg7wfwhsj0qHqTj3GPwf9PvCVp50XO4M/4fAlK3bj39w
Pg3/B8VnVq8suo6chf9DoHxeszFA5AL/B8UDXzZctUkUwf8hsNiJxn2G/UT/
rpHA+mxQHjjHGP27xNEs8dSO6ovwf9D8PxjBj5iF/l1ihdVjl0W4eMD/QfP1
rPer4W884f8QWMz4OldNQ2/4PwR2ZDcb8qTEB/4PgS0L7la4o+MH/wc9b1EG
wz0aLsP/Qc+36veTs+3Q376N9p9l125tkw+C/0Ng68zF46ryguH/oPUhLMd6
7fEQ+D8E1n6zYWpJMPycxIpVmsdmnrsK/4fAUucP0V9kEwb/B+1/ips9irdh
vTKj+Sjl9vyOHu7LIB66u2/wq5XX4f+g+ODL0l8ztCLg/xBYheSrDnsWCf8H
xWdFH4/6Lo+C/4PiB9Xj7MDaaPg/KB7rPPf38UacN9j533pgY5S2Kwb+D8pP
lux9++FwLPwf9PdZXtVbzcfB/0H7Rddm9fgQ3AdArPkpzEQi7Rb8HwJbLysU
XrTG/kF84YLso/1d8fB/0Hj5pdpcvJAA/wdxcFPYs9G4v2Qv5RtLt8XoJ+I+
S2LXB4sfVK/CfZYWAjNcf9JV7+lt+D8oPvTz25xulwT/Bz1vA9+/790X5z+I
Q5bKDhgdhvMfxCbXZmR8W5QM/wc9T25f5B3rcP8u8VHj0N2XD6TA/0HxwqBf
o7Vl7sL/IbCAoo4PDuF34f8QWFjl6QB5Bl8RseSc1vnyT+ET3k/5w2fu596j
afB/ULwkXaP7Wy4d/g/6vDp1D4sScJ8M8boX6rZ39TLg/6D57WI8Jb8lA/4P
ge2InajfwGfC/0Hx2za5XZ9UcB6HuNeS4rFf87Lg/6Dn7VjJucfbEV8Rr5+l
kO3/G/HVIYpXfq+/6qGL+5CJj4TvNL0TkAP/B32+xPnSie9z4P+g9X1eadKZ
+bnwf1A+dPeK92iXXPg/6PkUP+o4ez8X/g8aT6a+Lnp0HvwfFB+kjVC+YI37
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
cCzb90Sg3arr8H/QesPcpGvJ2AT4P+h5rRjkOrQN9eHec+wnvy6y5G4i/B8c
kzg+4ufOC7g/+IHWNzmRwyr3JcH/Qf1h1TqXDr1k+D9o/tO+WZM57Sb8H7Te
2ujSJSKUAv8Hx1r4vlQXpxT4P2i8SqwbcakhBf4PGs8CL/7ZZ5QK/wf1l1u3
TrTcR70l4lWVD8P/LPrn/6D2+bPBIT4O9ZaIVR1KZerHo95SG8VzttaPg3xR
b4lYLbfrReFA1Fv6TPFm7sOTNq64z0mcYW221OEz7nO20+dbMNe5ansm/B8U
j6+yvx1cjfjqy//mo8vXow1uwf/BsfWipj9+Ft6C/4NjW64+3uGjBp8w8e3+
vY+NUrPg/+CYcbKdgp5SNvwfHJu1dZWLTWQ2/B/Un96vfXVZ5jb8HzTefh7k
1XHuNvwf1P92XXm0bnAO/B/U/+P2ima658D/wTGTStn747tQT5849PMigZs9
zvt0cSwzf7VMcRPiXeI73MYZf7egnj6x9duOuHFP8+D/oPc5OMh3pF4+/B8c
m7eg5HvNnXz4Pzi28s0W0QMqd+D/4NiNbpcxTxPvwP9B64mgl2e+ysPvTDxW
uOZlSQj8nD0cu6Svb5Q4BH5O4oObfxjqLYefs5d+X86jyuyj9+D/oPVEpOBh
byb8OH20Ptp3aLHoV6w/iI2OKixsnFEA/wfFT1Yx1SetC+D/4Jh+/4b1H8OR
j/pF86/Rt6oRL5GPIp61zCv5x4j78H/QelbeeE7oqvvwf1B/TX2c9vME8lF/
OLaj5PQNsWzko4ibzkuer+pAPuovxSedQ7qMFAvh/+CY+8qnFsctkY8awLMl
OfHOpuexHiSeJOPcXF+G9SDxQNmEXeIDcR5OiGd9BVrFjYuRjyI27vWoMnNA
Pmogz/y9uve7RSMfRXwuQN9b5V8+ahDPbEwmSQSIIR9FLPG4U9xHC/koYZ6t
cRHyneCMfBRxssn4ZN1Y5KMG86xK2SNItAb3cYhrhj9wtBLD+nwI/f7JUSdW
a2B9Tuwy5tmwon1Yn4vwTLujy/pJJNbnxB80trbseYL1uSjPhs1s/us3APko
YsfvryYuV0Y+aijP6hYX5R61Qj6KuLV1tbWmL+7jDOPZzSm9MWfzUP+KeEXy
7LEmrah/JUafh6+3jh+DfBTx9XVHFx1bgXyUOP27ayF77oT6V8SpDy/qXQ9H
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
7g6B/4Nn0eI9C18ZXID/g8Y7r4KXeUvOw//Bs4bpCvHJM4Lh/6B4MSQzuXBy
EPwftF7QSjo2alIg/B/Un5I2zk+SR70lAcUnGbvsE2ehHhlxzYNJkcwN9cjO
0fss/vKvZizqkRHbRW1c6NbIwf9Bz2ubs/WomT7wf1B7KAjHzPU4C/8HrVen
HvnY2ewF/wfPls3JH+ix6TT8HzxrU5kZ8fPFKfg/aD7/fX/eoR0n4f+geFtL
9vfSXyfg/+BZ2XgzBYn1x+D/oHj20grH2HtH4P+g9eqK6Kb569zg/6D5QM+p
512PC/wfPCtdXijouOcM/weNT+XTqo/H7of/g2fDd1Y9OGLsCP8HrS/fjRkW
e94e/g+ePW5uSy+R2g3/B/UvxVLnmRU28H/Q+sjstJ1I0Xb4P3jWsmWy2qJv
FvB/UDzmV/Ji9jNT+D9o/N36VnjTnI3wf1B8PU837/fA9fB/8Eyu+2zTq1i9
/9ojlMYn2ZkKtzS04f+g8fSo5KCG80vh/+BZsfrcoRcjlOH/oPj0QpJc0/Sp
8H9Q+wyfvtz21Sj4P3hmnGefK7q/67/7UeE8M7heaGgUdeG/+1H/4/fW38yU
P/x3P4o4RdNgWNL6YfB/ULxvdrDgkpoc/B80PsXEfLzsPhv+D3pff2mN6wtR
hf+D5lPZvhkLHNh/7RFJ8cZh+wUjT+n+1x7Emb+OVRX5GMD/wTOjT3PuZhds
gP+DZ1JbdO+LLd4M/wfF+6Z7UoynmcP/QfOTmNft4w+2wf9B3/eTb6RKmjX8
H9Qetne29tXivloMxevaQaecNe3g/6D1SmnyWe06B/g/aD011KZZqNYJ/g/6
+b2a6+Ka/vk/aDwt+J1XK/LP/8EzvWqN3ztWu8L/wTOTAffcheMOw/9B7f+n
bePJye7wf/AsoeeGSWjmcfg/KB4ONxYbnO4B/wetjxMa3IvHon8Qz4z6E/WV
94T/g2d+SyuGm4t7wf9B8UXXyk3vQnF/kNj3tqi49SJv+D/o/ZA1f5Ly2gf+
Dxo/1NWNrvnx8H9QvN7muWnM+nPwf9B6MHtZYd1EP/g/aLxUcDN+f8Qf/g+e
nTvrG7HVAX6cJJ459dZ2Z9kGwv/BM6VtNdkfrIPg/6DxycukpnIXxivi4fIr
esz2o37iTVrPjAuwdPa4AP8Hz560CQ/6ExwC/wfFg4ayvs3JuM9J7H//s4VY
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
          "], $CellContext`data[
           Pattern[$CellContext`mode, 
            Blank[]], 
           Pattern[$CellContext`lone, 
            Blank[]], 
           Pattern[$CellContext`ltwo, 
            Blank[]], 
           Pattern[$CellContext`n1, 
            Blank[]], 
           Pattern[$CellContext`n2, 
            Blank[]], 
           Pattern[$CellContext`numlay, 
            Blank[]], 
           Pattern[$CellContext`tin, 
            Blank[]], 
           Pattern[$CellContext`lmin, 
            Blank[]], 
           Pattern[$CellContext`lmax, 
            Blank[]], 
           Pattern[$CellContext`nDataPoints, 
            Blank[]]] := 
         Module[{$CellContext`func}, $CellContext`func = 
            If[$CellContext`mode === "TM", $CellContext`rE, $CellContext`rM]; 
           Flatten[
             Table[
              $CellContext`func[$CellContext`lone/10^9, $CellContext`ltwo/
               10^9, $CellContext`n1, $CellContext`n2, $CellContext`numlay, \
(((2 Pi) 3) 10^8)/($CellContext`\[Lambda]/
               10^9), $CellContext`tin (Pi/
                180)], {$CellContext`\[Lambda], $CellContext`lmin, \
$CellContext`lmax, ($CellContext`lmax - \
$CellContext`lmin)/$CellContext`nDataPoints}]]]}; Off[
         MessageName[Infinity, "indet"]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.728839701347149*^9},ExpressionUUID->"3638b29d-c44b-4bb3-b096-\
5497d75a5f4e"],

Cell[CellGroupData[{

Cell["Background Information", "Subsection",ExpressionUUID->"25555d8e-4334-4e05-b310-8db62aa50fdc"],

Cell[CellGroupData[{

Cell["\<\
We assume that we have TEM-waves propagating in the z-direction, albeit \
(possibly) with a y-component. EM-waves are transversal waves, that is, the \
electric and magnetic fields are perpendicular to the direcion of \
propagation. Moreover, the transversal electromagnetic waves are such that \
the electric and the magnetic field are perpendicular to each other. This \
calls for the distinction between transverse-electric (TE) and \
transverse-magnetic (TM) waves, depending on how the incidence is. If the \
electric field is perpendicular to the plane of incidence, we say the wave is \
transverse electric. If the magnetic field is perpendicular to the plane of \
incidence, we say the wave is transverse magnetic. (On normal incidence it's \
the same, of course) The difference is important because the refraction is \
determined by boundary conditions for the fields at the interface between the \
dielectrics, which of course depend on which vector component of the fields \
lie parallel or perpendicular to the surface. Naturally, mixed cases are \
treated as superposition of TE and TM cases, since Maxwell's equations are \
linear here (assuming linearity of the magnetic and dielectric \
susceptibility, aka \[Mu] and \[Epsilon])  In the following figure,\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"6d6f64cf-aa41-4d8a-8af7-\
a166ee164479"],

Cell[TextData[{
 "the propagating radiation has a k-component along z and y, so that that is \
the incidence plane. Note: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "+", "b"}], " ", "=", " ", "\[CapitalLambda]"}], 
   TraditionalForm]],ExpressionUUID->"5cf33e36-c520-4fb1-97a0-ca7da6b34050"],
 "."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"56dfb1ab-468b-48d2-982c-\
73c1e24363eb"],

Cell[TextData[{
 "At the beginning of each layer, let the field have an amplitude given by \n\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalEpsilon]", "[", "z_", "]"}], ":=", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "n"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{
           SubscriptBox["k", "1"], "(", 
           RowBox[{"z", "-", 
            RowBox[{"n", " ", "\[CapitalLambda]"}]}], ")"}]}]]}], "+", 
       RowBox[{
        SubscriptBox["b", "n"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SubscriptBox["k", "1"], "(", 
           RowBox[{"z", "-", 
            RowBox[{"n", " ", "\[CapitalLambda]"}]}], ")"}]}]]}]}], "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["k", 
        RowBox[{"1", "y"}]], " ", "y"}]]}]}], TraditionalForm]],
  ExpressionUUID->"3f3a1caa-407c-410b-baff-cdab59aa0de4"],
 "   if  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", "\[CapitalLambda]"}], "-", "a"}], "<", "z", "<", 
    RowBox[{"n", " ", "\[CapitalLambda]"}]}], TraditionalForm]],
  ExpressionUUID->"c12afcb7-f4e9-4df0-b2c9-289c3078b1e0"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalEpsilon]", "[", "z_", "]"}], ":=", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SubscriptBox["c", "n"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{
           SubscriptBox["k", "2"], "(", 
           RowBox[{"z", "-", 
            RowBox[{"n", " ", "\[CapitalLambda]"}]}], ")"}]}]]}], "+", 
       RowBox[{
        SubscriptBox["d", "n"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SubscriptBox["k", "2"], "(", 
           RowBox[{"z", "-", 
            RowBox[{"n", " ", "\[CapitalLambda]"}]}], ")"}]}]]}]}], "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SubscriptBox["k", 
        RowBox[{"1", "y"}]], " ", "y"}]]}]}], TraditionalForm]],
  ExpressionUUID->"40d279b0-15c5-4b68-a49f-ac2ee9c06300"],
 "   if   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", " ", "-", "1"}], ")"}], "\[CapitalLambda]"}], "<", "z", 
    "<", 
    RowBox[{
     RowBox[{"n", " ", "\[CapitalLambda]"}], "-", "a"}]}], TraditionalForm]],
  ExpressionUUID->"d2c5f670-5164-42ea-9624-3886b5743740"],
 "\n\nIn the following it is assumed that the propagation is along z"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"84d056e3-1c31-42c1-99ac-\
5a174b1e31e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kz", "[", 
   RowBox[{"n_", ",", "\[Omega]_", ",", "c_", ",", "\[Beta]_"}], "]"}], ":=", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"n", "  ", "\[Omega]"}], "c"], ")"}], "2"], "-", 
    SuperscriptBox["\[Beta]", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k\[Theta]", "[", 
   RowBox[{"n_", ",", "\[Omega]_", ",", "c_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"n", " ", "\[Omega]"}], "c"], 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"47980050-f7d6-4a21-83cd-\
36be6c4460ac"],

Cell[TextData[{
 "Notice that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", "k", "|"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "\[Pi]"}], 
      SubscriptBox["\[Lambda]", "n"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Pi]"}], 
       SubscriptBox["\[Lambda]", "o"]], " ", "n"}]}]}], TraditionalForm]],
  ExpressionUUID->"417af7ce-6df2-4bcd-8b0a-42ea93ec5894"],
 ". Then why is \[Beta] indep of the index of refraction?\nAnswer: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "n"], "=", 
    RowBox[{
     SubscriptBox["k", 
      RowBox[{"y", ",", "n"}]], "=", 
     RowBox[{
      SubscriptBox["k", "n"], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "n"], "]"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"3ba69b45-2b30-4421-90e9-5ae28fbcaaec"],
 ", but with Snell's law: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "1"], 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}]}], "=", 
    RowBox[{
     SubscriptBox["n", "2"], 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}]}]}], TraditionalForm]],
  ExpressionUUID->"a3a37a7c-8030-47f0-b67d-11c184aa579f"],
 ", we get: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "2"], "=", 
    RowBox[{
     SubscriptBox["k", 
      RowBox[{"y", ",", "2"}]], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"2", "\[Pi]"}], 
        SubscriptBox["\[Lambda]", "o"]], " ", 
       SubscriptBox["n", "2"], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}]}], "=", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Pi]"}], 
         SubscriptBox["\[Lambda]", "o"]], " ", 
        SubscriptBox["n", "1"], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}]}], "=", 
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"y", ",", "1"}]], "=", 
        SubscriptBox["\[Beta]", "1"]}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"148d10a3-951b-47e1-b187-c9b461596504"],
 "\n\n",
 "To compute the propagation we use the following:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"n", "-", "1"}]]},
       {
        SubscriptBox["b", 
         RowBox[{"n", "-", "1"}]]}
      }], ")"}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["k", "2"], "b"}]], "(", 
          RowBox[{"1", "+", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["k", "2"], "b"}]], "(", 
          RowBox[{"1", "-", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["k", "2"], "b"}]], "(", 
          RowBox[{"1", "-", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["k", "2"], "b"}]], "(", 
          RowBox[{"1", "+", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}]}
       }], "\[NegativeThinSpace]", ")"}], 
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["c", "n"]},
        {
         SubscriptBox["d", "n"]}
       }], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "3803d0df-4f27-4386-a9a2-5a037e56e2fe"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["c", "n"]},
       {
        SubscriptBox["d", "n"]}
      }], ")"}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["k", "1"], "a"}]], "(", 
          RowBox[{"1", "+", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["k", "1"], "a"}]], "(", 
          RowBox[{"1", "-", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}]},
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["k", "1"], "a"}]], "(", 
          RowBox[{"1", "-", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SubscriptBox["k", "1"], "a"}]], "(", 
          RowBox[{"1", "+", 
           FractionBox[
            SubscriptBox["k", "2"], 
            SubscriptBox["k", "1"]]}], ")"}]}
       }], "\[NegativeThinSpace]", ")"}], 
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["a", "n"]},
        {
         SubscriptBox["b", "n"]}
       }], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "44930169-b615-4ecc-a2ef-10223de73371"],
 "\n\nand replace one matrix into the other. You may keep this result in \
mind, because it will surface again when we do the derivations from scratch."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"16e0c4c1-61d8-4664-8380-\
d705df87575a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",ExpressionUUID->"f509cb97-84a2-4540-8b7e-d1d5b0cb6633"],

Cell[CellGroupData[{

Cell["Model", "Subsubsection",ExpressionUUID->"1277b5c5-1e03-49d5-b350-6e5147a9c97b"],

Cell[CellGroupData[{

Cell["NOTATION: k1 is taken to be the component along z of k in n1", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"e873dccd-f307-4092-9090-\
4821d13439cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MTE", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"phase", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "a"}], "]"}]}], ",", " ", 
      RowBox[{"invphase", " ", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "a"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sink2b", " ", "=", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k2", " ", "b"}], "]"}]}], ",", 
      RowBox[{"cosk2b", "=", 
       RowBox[{"Cos", "[", 
        RowBox[{"k2", " ", "b"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"k1overk2", " ", "=", " ", 
       RowBox[{"k1", "/", "k2"}]}], ",", " ", 
      RowBox[{"k2overk1", " ", "=", " ", 
       RowBox[{"k2", "/", "k1"}]}], ",", "\[IndentingNewLine]", "sum", ",", 
      "diff"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum", " ", "=", 
      RowBox[{"\[ImaginaryI]", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k1overk2", " ", "+", " ", "k2overk1"}], ")"}], "/", 
        "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diff", " ", "=", " ", 
      RowBox[{"\[ImaginaryI]", "  ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{"k1overk2", " ", "-", " ", "k2overk1"}], ")"}], "/", 
        "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"phase", " ", 
          RowBox[{"(", 
           RowBox[{"cosk2b", " ", "+", " ", 
            RowBox[{"sum", " ", "sink2b"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", "invphase"}], " ", "diff", " ", "sink2b"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"phase", " ", "diff", " ", "sink2b"}], 
         "                                      ", ",", 
         RowBox[{"invphase", 
          RowBox[{"(", 
           RowBox[{"cosk2b", " ", "-", "  ", 
            RowBox[{"sum", " ", "sink2b"}]}], ")"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"457df986-d52b-448a-8fa0-\
7ce676694d9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MTE", "[", 
   RowBox[{"k1", ",", "k2", ",", "a", ",", "b"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"44d3e9f9-0cae-4fef-8c15-\
3222aba972f7"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "k2"}], "]"}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["k1", "k2"], "+", 
            FractionBox["k2", "k1"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"b", " ", "k2"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["k1", "k2"], "-", 
         FractionBox["k2", "k1"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"b", " ", "k2"}], "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["k1", "k2"], "-", 
         FractionBox["k2", "k1"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"b", " ", "k2"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "k2"}], "]"}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["k1", "k2"], "+", 
            FractionBox["k2", "k1"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"b", " ", "k2"}], "]"}]}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.728839077944397*^9, 
  3.7288390797000637`*^9}},ExpressionUUID->"7711aaea-e105-400c-8d73-\
0d090d531e01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MTM", "[", 
   RowBox[{
   "k1_", ",", "k2_", ",", "a_", ",", "b_", ",", " ", "n1_", ",", " ", 
    "n2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"phase", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", "a"}], "]"}]}], ",", " ", 
      RowBox[{"invphase", " ", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "a"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sink2b", " ", "=", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k2", " ", "b"}], "]"}]}], ",", 
      RowBox[{"cosk2b", "=", 
       RowBox[{"Cos", "[", 
        RowBox[{"k2", " ", "b"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
      "rat12sq", " ", ",", " ", "invrat12sq", " ", ",", "sum", ",", "diff"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rat12sq", "=", " ", 
      FractionBox[
       RowBox[{
        SuperscriptBox["n2", "2"], "k1"}], 
       RowBox[{
        SuperscriptBox["n1", "2"], "k2"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"invrat12sq", "=", " ", 
      RowBox[{"1", "/", "rat12sq"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sum", " ", "=", " ", 
      RowBox[{"\[ImaginaryI]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rat12sq", " ", "+", " ", "invrat12sq"}], ")"}], "/", 
        "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diff", " ", "=", " ", 
      RowBox[{"\[ImaginaryI]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"rat12sq", " ", "-", " ", "invrat12sq"}], ")"}], "/", 
        "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cosk2b", " ", "+", " ", 
            RowBox[{"sum", " ", "sink2b"}]}], ")"}], "phase"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"diff", " ", "sink2b"}], ")"}], "invphase"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "diff"}], " ", "sink2b"}], ")"}], "phase"}], 
         "                 ", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cosk2b", " ", "-", "  ", 
            RowBox[{"sum", " ", "sink2b"}]}], ")"}], "invphase"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"6de8f560-ed9d-4d44-8e87-\
b376a9c714d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MTM", "[", 
   RowBox[{"k1", ",", "k2", ",", "a", ",", "b", ",", "n1", ",", "n2"}], "]"}],
   "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"027533d0-a675-45b6-ad2c-\
4bc0562d3077"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "k2"}], "]"}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"k2", " ", 
              SuperscriptBox["n1", "2"]}], 
             RowBox[{"k1", " ", 
              SuperscriptBox["n2", "2"]}]], "+", 
            FractionBox[
             RowBox[{"k1", " ", 
              SuperscriptBox["n2", "2"]}], 
             RowBox[{"k2", " ", 
              SuperscriptBox["n1", "2"]}]]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"b", " ", "k2"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"k2", " ", 
            SuperscriptBox["n1", "2"]}], 
           RowBox[{"k1", " ", 
            SuperscriptBox["n2", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"k1", " ", 
           SuperscriptBox["n2", "2"]}], 
          RowBox[{"k2", " ", 
           SuperscriptBox["n1", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"b", " ", "k2"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"k2", " ", 
            SuperscriptBox["n1", "2"]}], 
           RowBox[{"k1", " ", 
            SuperscriptBox["n2", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"k1", " ", 
           SuperscriptBox["n2", "2"]}], 
          RowBox[{"k2", " ", 
           SuperscriptBox["n1", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"b", " ", "k2"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k1"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "k2"}], "]"}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"k2", " ", 
              SuperscriptBox["n1", "2"]}], 
             RowBox[{"k1", " ", 
              SuperscriptBox["n2", "2"]}]], "+", 
            FractionBox[
             RowBox[{"k1", " ", 
              SuperscriptBox["n2", "2"]}], 
             RowBox[{"k2", " ", 
              SuperscriptBox["n1", "2"]}]]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"b", " ", "k2"}], "]"}]}]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.728839077988508*^9, 
  3.728839079717102*^9}},ExpressionUUID->"7f60588f-6dbf-4b3f-be7e-\
c1fd88bc3b9a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"K\[CapitalLambda]", "[", "matrix_", "]"}], ":=", " ", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "matrix", "]"}], "/", "2"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CmagSquared", "[", "matrix_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"matrix", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "^", "2"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"5fa39684-b764-4b2f-a6ec-\
2392c223c9b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rE", "[", " ", 
   RowBox[{
   "a_", ",", " ", "b_", ",", "n1_", ",", "n2_", ",", " ", "nn_", ",", " ", 
    "\[Omega]_", ",", " ", "\[Theta]in_"}], "]"}], ":=", 
  "\[IndentingNewLine]", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "k\[Lambda]", ",", " ", 
      RowBox[{"c", "=", " ", 
       RowBox[{"3.", " ", 
        RowBox[{"10", "^", "8"}]}]}], ",", "\[Theta]1", ",", "\[Theta]2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]1", "=", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]in", "]"}], "n1"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2", "=", " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"n1", " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "n2"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"matrix", " ", "=", " ", 
      RowBox[{"MTE", "[", 
       RowBox[{
        RowBox[{"k\[Theta]", "[", 
         RowBox[{"n1", ",", "\[Omega]", ",", "c", ",", "\[Theta]1"}], "]"}], 
        ",", 
        RowBox[{"k\[Theta]", "[", 
         RowBox[{"n2", ",", "\[Omega]", ",", "c", ",", "\[Theta]2"}], "]"}], 
        ",", "a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"k\[Lambda]", " ", "=", " ", 
      RowBox[{"K\[CapitalLambda]", "[", "matrix", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     FractionBox["1", 
      RowBox[{"1", " ", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", " ", 
          FractionBox[
           RowBox[{"Sin", "[", "k\[Lambda]", "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"nn", " ", "k\[Lambda]"}], "]"}]], "]"}], "^", "2"}], 
        RowBox[{"CmagSquared", "[", "matrix", "]"}]]}]]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.6332638168815913`*^9, {3.696718842120638*^9, 3.696718853378098*^9}, {
   3.6967189568686485`*^9, 
   3.696718957039529*^9}},ExpressionUUID->"54c36822-3e9e-40fc-8652-\
7d4d3da69044"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rM", "[", " ", 
   RowBox[{
   "a_", ",", " ", "b_", ",", "n1_", ",", "n2_", ",", " ", "nn_", ",", " ", 
    "\[Omega]_", ",", " ", "\[Theta]in_"}], "]"}], ":=", 
  "\[IndentingNewLine]", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "k\[Lambda]", ",", " ", 
      RowBox[{"c", "=", " ", 
       RowBox[{"3.", " ", 
        RowBox[{"10", "^", "8"}]}]}], ",", "\[Theta]1", ",", "\[Theta]2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]1", "=", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]in", "]"}], "n1"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2", "=", " ", 
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{"n1", " ", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "n2"], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"matrix", " ", "=", " ", 
      RowBox[{"MTM", "[", 
       RowBox[{
        RowBox[{"k\[Theta]", "[", 
         RowBox[{"n1", ",", "\[Omega]", ",", "c", ",", "\[Theta]1"}], "]"}], 
        ",", 
        RowBox[{"k\[Theta]", "[", 
         RowBox[{"n2", ",", "\[Omega]", ",", "c", ",", "\[Theta]2"}], "]"}], 
        ",", "a", ",", "b", ",", "n1", ",", "n2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"k\[Lambda]", " ", "=", " ", 
      RowBox[{"K\[CapitalLambda]", "[", "matrix", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     FractionBox["1", 
      RowBox[{"1", " ", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", " ", 
          FractionBox[
           RowBox[{"Sin", "[", "k\[Lambda]", "]"}], 
           RowBox[{"Sin", "[", 
            RowBox[{"nn", " ", "k\[Lambda]"}], "]"}]], "]"}], "^", "2"}], 
        RowBox[{"CmagSquared", "[", "matrix", "]"}]]}]]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.6332638168815913`*^9, {3.6967188246736236`*^9, 3.6967188342736416`*^9}, 
   3.6967189523793116`*^9},ExpressionUUID->"f78b9503-6a50-4fdb-859e-\
5da74964c4c2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics", "Subsubsection",ExpressionUUID->"e6761ddb-330e-483d-98f2-806196b7556f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rE", "[", 
    RowBox[{
     FractionBox["65", 
      RowBox[{
       SuperscriptBox["10", "9"], " ", "1"}]], ",", 
     FractionBox["65", 
      RowBox[{
       SuperscriptBox["10", "9"], " ", "1"}]], ",", "1.5`", ",", "2.62`", ",",
      "50", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]"}], ")"}], " ", "3", " ", 
       SuperscriptBox["10", "8"]}], 
      FractionBox["\[Lambda]", 
       SuperscriptBox["10", "9"]]], ",", 
     RowBox[{"Pi", "/", "9"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "300", ",", "900"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
      "Large"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Lambda] (nanometers)\>\"", ",", "\"\<reflectivity\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", " ", "Axis"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->
  True,ExpressionUUID->"ee3d44c0-a177-4124-8b0c-e0888557acda"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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

    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2XfAT3Ubx/Ebt5kiMyrSLlulSKKhIRVt2Xvvlb03oSgke++S7L2jIcne
IxmJ7PW8Ls8f5/len+v9vs59u3/nd8739OSq1rhco6QJCQlJHHek+v+aJtX/
60Lq1NZPExMS6qRISHiL+FLKhITqyRISmiZPSHiaPFE+KJ+RV8p/8HbyjpuZ
aH4Xfr/6Sf1U+mnlnPy8/NP4aPUMdTuzX+DjuJ/q3y1/65ivt1avs95R+bqc
hr9R7mS2v/pj/W7O3wTrxC2IpfJ7l1fX1i+tX9LPrcZvwn+KP0E+IJ+WV8jb
eDt4x8xMML8Tv0/9hH5K/TvkHPw8/FP4t+rp6rbxe3KGcMbyy2PPW1/Xe0Kv
BO9tXnreMvVP6lHqH7A1vE78I/I1OTW2Qf5Ibix3xAvIn1hrOd+belWdozGv
EGe832m/fEpeLv/O+ZNzlD/e3A78XvXj+ini7xafBT83/yTeTB4lT5M/Mz+K
N5g3xswneFHra3qP673IK8NLx/vGMU9vNd6Rd1i+KqfC18sfynFRdcDzyx9b
azrPG/H38DOrOFcjbkHeOHmffFJeJm/lbecdMTPO7J94dvVj+snjbxSfC/9J
/t94U/kbearcJn433iDeaDMf40WspfQe03uUW5z7Fvcu7lL1JvVI9ff4Km4H
M4fkK3JKbJ38gdxQbo/nk19XVzbbEC+A7VX/rV6q/s3P+gM/zB3L3e5nZlM/
qp8Yf6P4TPhP8E/gTeSR8hS5tfmRvM9535r5CH/O+qreo3ov8Erz7uQtUW9U
j1B/h63ktecflC/LKbC18vtyA7kdnjeuLWsN53tNr5JzNODl54z1e+yRT8hL
5F852ziH+GPM/YHfo35EP1n8beJz4T/O/wtvLI+QJ8utzI/gDeSNMvMh/qz1
Fb1H9B7hFuO+yU3LXazeoB6unouv4LYzc0C+JCfH1sjvyfXltnieuM6s1Z2z
VFyfzlnReepz8/HGyLvlv+TF8i+833kHzYw2uw3Pqn5YP2n8veJz4j/GP44P
V09StzQ7AP+G+0HcI+WvHXP0luu11dsvX5QT+avljmb7qcvpd3X+ethn3NxY
SvelD9TV9F/VL+7nVuDX4+flj5Z3ycflRfLPvK28A2a+Nf87nkX9kH6S+NvE
58J/lH8M/1o9Ud3CbH98JPd9/YfVz2NvYGmwrxyz9Zbhn+HXsdTOuU//gn4y
3ir98s7fAesrl8W6cOribeKejqfw73lfXVX/lbhG+Z/y6/LzxL1R3ikfkxfG
94Oznz/KbII6K/YIdlRsjvfTG4G/Jxe2vuy8D+k97DxFua9zU/N6y4vk9fIw
+UfeLN5SM23MLsWv4an09+Knrf/hSeM5FfdUvD3eR34X74zXwVvHPT+uNWsV
vZf1yvPq8HLzdqiPqhfEdwTbx/uGf0vOgj2MHZG/Uk9QN9PvyxvOK6d/1s99
Rv2Scz+o/5BchPsaNxW3l7xQXicPjecfbyZviZnW5pfgV/GU+nvw81iSeIZh
78i15VZxz5dfUn/CrY0/if2pPqL+Ub3F/C/4Xu5I7lbnzax+UP8mnhiZ/xD/
MN5IHiaPl5viw3l9zH9tpiz+D/60uqR+Lv0H5ef4pfgp+QvUa9Vfqmfgi7mt
zO2Wz8UGJJ5hlrflWnLLuOdH2/VVTl3ZeUvqF3Pej52rFv+JeGbJ2+XD8nx5
M+9n3h4zI8z/hmdS59K/gSeLzH+Qfyjuv3Et8b/ivCs/oH4WfxVPEdeVeo36
i3hmO8d0fBG3JXexc13BU+jvwk9Z/8Vv4cviuYe3w3ubL4N3wmviLeJ5gCf6
t5VVV9IvEd9P/kf8mvzHYy+lPqT+Qf0TZwtnN3+42YzWB/SuYxl5uXgH4z4c
1xBvGP6OfMY5n1KX4ObUzyUX5r/CT87tKc+XV8tD4rnOm8ZbaKaF+UX4ZTx5
7Ovws9hNbCn2llxDbh7PBflda0Xei3ofmqnhnI/FM9k5tskH5XnyJs5mzi7+
1+Z+xTOoc+pfw5NG5j/AP4A3lIfK4+RGcf/l9TQ/1Mzb+Gm8kPpF/Rz6D8R3
jP8yPzE+N/Uq9WD1VHwBt7m5S/qJse/TP2n9B7uBLYnnpHO0xXuZK413xKvj
zeKZgSfz2b2jrqBfXL8o/wN+df6jsRdTH1B/H58dvpP7VexrrTnMXNW/m5OT
s1//S/VYdcO4N+M9zHzJLYOdcu6C6uL69+vnjO8a/yV+Mn4PeZ68Uh4Uexne
FN6PZpqZX4hfxJPF/hD/23oGv44vxj/Depp9E6um3zSeL/ovqN/HqmGPxN7E
ebbK++Xv5I3Os4mzgz+M/wueXn2//hU8SWR+Dv4+/Av1GHUDrLu5L7hv6Rew
vmDmPr0ccb3ySvKShid/L6+QP4+9Dm8yb76ZpmYX4BfwpLFvxE9YT+PX8EWx
R8Db4D3Mv4F3wKviTeJeF/ebeN/QK6ZXhPsetyr34XhWqfep58a/Ff+TO9TM
z7x06vvMXY4Xpsjc+7l7xQbyEHm0XB8fxutmfoiZ0vi96kJ4CTxJ/JvUy9UD
Y//DnYT/wG3C/dG5/sOTxL4S/8t6Cr+KL4y9Kd4a727+dbw9XgVvHPe8eMS6
TsvEe4n+8/rP8cvxq/Afin2a/Ku8V54jb+Bt4G0386X5u6z36l3Cblnv4t7H
3YPVNztY/lauhw/Fu5odbOZN/CSeX11MP7t+Qe6Lyf//sjlXvUw9IPZS+ER8
HrcxPN/c+WSxuXDfwI9bT+JX8AWxp8Vb4d3Mv4a3wyvjjeKeGKf3b34r3mH0
i8b9nF+WX5n/YDy75F/kPfJseT1vPe8PM1+Yv9OaXe8idtN6J/de7m6sntlB
8ii5Lv4l3sXsIDNv4Pmsz+tl07ufW4BbnHsL6ybPkZfK/WP/xZvA+95MI/wH
/Bx+C/8dP4b/jV/Gf4w9Cd4S74qXwtvilfCGce+M/ZR/d+l479Evol+Y/y6/
Ej9X3Dfln+Xd8ix5HW8db5uZIca34GnV2fQv4DesafnZ+bvwuvjn8jdyHfwL
vLP5z+N9F/8bz6suqn+P/n3x+fNf4N/Eu8qz5SVyP/OzeON535lpiM/D/8Vv
4lvxo/gJ/BI+Hy+Ht8C74K/in+EV8QZxT409GP5mvDfpP6f/jPwOvyL/gbiv
ylvkXfJMeS1vLe93M4PNb8bvUN8Te0X8uvUOfjb+TrwOPlAeKdfGh+CdzA+M
92T8BJ5HXUQ/q/69cj5+Mf4NvIs8S14s9zU/kzeON9dMA/x7/Cx+A/8NP4L/
hV/Ef8DL4s3xzvgreBu8Al4/7rn4TfyNeN/Sf1b/afltfgV+zrgPyZvlnfIM
eQ1vDW+rmUHmf8LTqLPqn8evWdPw7+HvwGvjA+QRci18MN7R/AAzpfC/8Nzq
5/Sz6GeP64H/PP863lmeKS+S+8Q+kDeWN8dMffw7/B/8Ov4rfhg/jl/A58X+
Am+Gd8Jfxlvjn+L14l6M38Bfj/c0/cL6T8ll+J/yc8T9Sf5J3iFPl1fHtRv/
jcHxany3497seMWR3fGyI5vjHkdWRxZHZkem2H85MsTzPPbZjvSOko50joGO
Eo5r8Z2J52I8k61N45mtbuX3K+9n1/W73hXvXn6v1+I9Tf+ZeDbIb3HL+z3v
j3uMvEn+U54WvzdvFe83MwPMb8JTq7Pon8OvWlPzs/K347Xw/vJwuSY+CO9g
vn/smfDj+JPqZ/Uz62eL65hflH8V7yTPkBfKvc1P543hzTZTB5+Ln8Gv4T/j
h/Bj+H/4d/FegjfBO+Il8Zb4J3gd/M74O+Gl4p1P/+l4Tsil+Z/w74v7jLxR
3i5PlVfxVvJ+NdPf/EY8lTpz7L/xK9ZU/Cz8P/CaeD/5a7kG/jne3ny/2FPh
x/An1IX1M+nfE9cxvwj/Ct5Rni4vkHuZn8YbzZtlpjY+Bz+NX8W34Afxo/h5
fG7sMfDGeAe8BN4C/xivjafFr+Kvxvuh/lP6BeI+xv+Yf2/cZ+QN8h/yFHkl
bwXvFzP9zG/AU6oz6Z/FL1tT8jPzt+E18L7yV3J1fCDeznzf2HfhR/HH1c/o
Z4x38rge+M/xL+Md5Gnyj3LP2EPzvuXNNFMLn42fwq/gm/ED+BH8HD4HL4M3
wtvjL+LN8Y/wWvgd+BX8lXiP1C+knz/uY/yP+NnjPiOvl7fJk+UVvOW8n830
Nb8eT6HOGHt4/JI1BT9TPEfx6ngfeZhcDR+AtzXfJ/Ym+BH8MfXT+hn0s8T1
wH+WfwlvL0+V58s9zE/hjeLNMFMTn4WfxC/jP+H78cP4v/jseE/CG+Lt8OJ4
M/xDvCaeBr+Mvxzvn/oF9fPFfYz/IT9bfF/ldfLv8iR5OW8Zb4uZPubX4cnV
GWJfj1+0JudnjOcoXg3vLQ+Vq+L98c/M9469Cn4Yf1T9lP7d+pnjeuAX5l/E
28lT5B/k7uYn877hTTdTI5772CVsE7YPO4SdxWZhpc02wNviL+BN8Q/wGnjq
eAfDX4p3Vf0C+nnjXsj/gH9PfFfltfJWeaK8jLeUt9lMb/Nr8UT13bHvxy9Y
E/kZ4hmK91J/qa6C9cPamO0VexTskNlH1IX00+tniuuA/wz/At5WnizPk7uZ
n8QbyZtmpjo+Ez+BX8Q34nvxg/g/+Ez8Tbw+/hleDG+Cv49XT7y9VUu4iJeM
d1j9/Pp54j7If5+fNb6n8hr5N3mCvJS3hPeTmV7m1+DJ1OnjnQD/z5qMf3c8
P/GqeE/5C7ky3hdvbb5n7FHwg/jD6oL66fQzxnXAf5r/X7wXypPk7+Wu5ify
RvCmmqmGz8D/wi/gG/A9+AH8DD4DfwOvh7fBn8cb4+/h1RJvvzIlXPA/JeId
Vz+ffu64D/Lf42eJ76m8Wv5VHi8v4S3mbTLT0/xqPKk6Xbwf4OetSfnp+b/g
VfAe8hC5Et4Hb2W+R+xR8AP4Q+oC8V6jnyGuB/5T/PN4G3mi/J3cxfwE3nDe
FDNV8en4cfw/fD2+G9+Pn8an46/jdfHWeFG8EV4Or5p4+9Um4T/8xXgHFvLq
Pxn3QX45fub4nsqr5F/kcfJi3iLeRjM9zK/Ck8QeIt4T8HPWJPx08RzGK+Pd
5cFyRbw33tJ893jW4/vxB9X54x1H/+64HviF+Ofw1vIEea7c2fx43te8yWaq
4NPwY/h5fB2+C9+Hn8Kn4a/hdfBWeBG8IV4Wr5J4+z/3JZzHi8c7sX4e/Sfi
PsgvC2aK76u8Uv5ZHisv4i3kbTDT3fzKuIhiDxHvCfi/8Ufl3xXPYWUlvJs8
SK6A98JbmO8Wz3p8H55LnS/ec/TTx/XAL8j/F28lj5fnyJ3Mj+N9xZtkpjI+
FT+Kn8PX4jvxvfhJfCpeCq+Nt8Sfwxvg7+KVE2//2gnn8BfiXVk/t/7jcS/k
v8vPGN9XeYW8RR4jL+Qt4K030838CvwWnjbeE/Cz1lv4nfEcxiviXfHP5U/x
nnhzvGs86/G9+APqvPGeo58urgd+Af5ZvKU8Tp4tdzQ/ljeMN9FMJXwKfgT/
F1+D78D34H/jU2JPjdfCW+DP4vXxd/BKibc/poSujuWcm8Idsdfn/GO9yUkb
z1K8At4FHyiXx3vgzfAu8bzG9+A51XniXUX/rvhM+fn5/+At5LHyLLmD+TG8
obwJZirik/HD+Fl8Nf4nvhs/gU+OdwG8Jt4cL4zXw9/GKybe/r8vEv7Fi8W7
v/6TGo/FPZ3/Dj9D3HPk5fJmebS8gPcjb52ZLuaX4TfwNLFnxs9Yb+B3xPMU
/xTvjA+QP8G7403xzvG8xnfjOdS5Y88fn318pvx8/DN4c3mMPFNub34070ve
eDMV8En4IfwffBW+Hd+F/4VPincgvAbeDH8Gr4uXwSvg/wNn1Rqn
         "]]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwl2gXUVOUWh/GPLkkLk1BEulsFBCSkke7u7u7uLqW7QbrDoKWlQUG6u7m/
d9217tx3//fz7POdYWbOe2aWyeq0LNsiUkRERKyYERFhrRY1IqJE5IiIxtEj
IrJptIkWEVEvSkREgRgREfPwa/hp/AS+E7+L/4vPw6vhs/Fx+HS8G74Un4G3
xe/g6eWkclw5Fi8N73MzZ+QseC91a/1++pXND+f34lfF9+Jx5Nf4HfwKHtv6
Gt+K98b/ML8OX68/Hd/P34YPxhPJpeT8cko5Na8o7xsz92Uxorq6pKKJfnZ+
W359fkF8Pn49nCv+N74Lv4dfwufj1fE5+Hh8Bt4dX4bPxNvhd/EMcjI5nhyb
l5aXxMxZOSveW91Gv79+FfMj+L351fB9+DvyG/wufhWPY32Db8P74MqIGo5R
itMUy8FpZ6YBUIizAL8R/h5+Ev8Nv49fxhfgNfC5+AR8Jt4DX47Pwtvj9/CM
cnI5vhyHl46X1Mw5ORveR91Wf4B+VfMj+X341fH9eFz5LX4Pv4a/Y32Lb8f7
4n+aX49v0J+BH+Bvx4fg78ql5e/lr+U0vGK8b808kC0RNf1faf1m+jn57fkN
+T/gC/Gb4VzxU/jv+AP8P3whXhOfh0/EZ+E98RX4bLwDfh/PJH8hJ5Df4aXn
JTNzXs6O91W30x+oX838KH5ffg38AB4v2v9fqPv4dTyuNZz4Dryfcrd6g/mN
+jPxg/wd/KH4e3IZuYCcSk7L+5H3nZmHcjh0LXUZ/eb6ufgdNBvxC+OL8Fvh
XPHT+B/4Q/wKvgivhc/HJ+Gz8V74SnwO3hF/gGeWv5QTynF5GXjJzVyQc+D9
1O31B+lXNz+a349fEz+Ix5cjyQ/wG3g8ayQzO/H++B71RvOb9Gfhf/F38ofh
78tl5YJyajkdrzgvr5lHcvinrK0uq99CyM3vyG/ML4Ivxm+Hc8XP4H/ij/Cr
+GK8Nr4An4zPwXvjq/C5eCf8IZ5FTiEnkuPxMvK+MHNRzon3V3fQH6xfw/wY
fn9+LfwvPIEcWX6I38TjWyOb2YUPwPeqN5nfrD8bP8TfxR+OfyCXkwvJaeT0
vBK8fGYey/4XUUddTr+lfh5+J34TflFwCX4nnCt+Ft+NP8av4UvwOvhCfAo+
F++D/4rPwzvjj/Cs8lfyu3J8Xibel2b+kXPhA9Qd9Yfo1zQ/lj+AXxs/hCeU
o8iP8Ft4AmsUM7/hA/F96s3mt+jPwQ/zf+OPwD+Uf5J/kNPKGXglefnNPJFt
YxF11T/ptwrXdn5nflN+MXwpfjecK34O34M/wa/jS/G6+CJ8Kj4P74uvxufj
XfDHeDY5pfyenICXmZfCzL9ybnygupP+UP1a5sfxB/IPY4nUUdWPsdtYQmtU
/u9mB+H71VvMbtWfix/h/84fiSeWy8uF5XRyRl4p3vdmnob91Hw9dXn91uGa
yO/Cb8b/EV+G3wvniZ/H9+JP8Rt4PWwx9jM2H+uHrcEWYF3NPsGzy1/L78sJ
eVl4X5m5JOfBB6k76w/Tr21+PH8Qvw5+BH9XjiY/we/giazRzPyBD8YPqLea
36Y/Dz/K/4M/Cv9IriAXkdPLmXileQXMPAt7qfn66gr6bcL1kN+V35xfHF+O
3w/nil/A9+HP8Jv4Mrw+vgT/BV+A98fX4gvxbvhTPIecSv4g3EvwsvJSmrks
f4MPVnfRH65fx/wE/mB+Xfwo/p4cXX6K38XftUY38yc+BD+o3mZ+u/58/Bj/
T/5o/GO5olxUziBn5pXhFTTzPOzD5huoK+q3DddDfjd+C34JfAX+IJwrfhHf
jz/Hb+HL8Qb4UnwavhAfgK/DF+Hd8Wd4Tjm1/GHYh3nZeF+b+U/+Fh+i7qo/
Qr+u+Yn8IeG9hR/D35djyM/we/h71hhmduND8b/U283v0F+AH+fv5o/BP5Er
ycXkjOFekVeWV8jMi7APm2+orqTfLlwP+d35Lfkl8ZX4w3Cu+D/4AfwFfhtf
gTfEl+HT8UX4QHw9vhjvgT/Hc8lp5MRhH+Zl56Uyc0X+Dh+q7qY/Ur+e+Un8
ofz6+HH8Azmm/By/j79vjWlmDz4MPxTuAczv1F+In+Dv4Y/FP5Uryz/KmcK9
Iq8c7wczL8M+bL6RurJ++3A95Pfgt+KXwlfhj8K54v/iB/GX+B18Jd4IX47P
wBfjg/AN+BK8J/4Czy2nlT8K+zAvBy+1matyXnyYurv+KP365ifzh/Eb4Cfw
D+VY8gv8Af6BNZaZvfhw/HC4BzC/S38R/jd/L38c/plcRS4uZw73mbyfeIXN
vAr7sPnG6ir6HcI1kd+a+2t4X6kbW1965PMYEe5BPPKHvdjj+7AnhWtzuEaF
z2l4r4bXK5yzR2KPjzwKeHzsUdDjE48mHoU8/vYY6bEr/Nv5Wyed5z5/e7zz
+lyuKpeQs4T7Q05551fEub4Or2s4jrqqfsdwPeP35Lfhl8ZX44/DvzF+CT+E
v8Lv4qvwpvgKfCa+BB+Mb8SX4r3wV3geOZ38cbh/4OXkpTFzTf4BH67uoT9a
v4H5Kfzh/Ib4yfD85djyS/wh/qE1tpl9+Cj8SNi7zf+mvwQ/xd/Pn4AnkavJ
JeWs4f6QV4FX1Myb8Lqab6qupt8pXM/4vfht+WXwNfiTcK74Zfww/hq/F15b
vBm+Ep+FL8WH4JvwZXhv/DX+jZxe/iTcP/By8dKauS4XDu8HdU/9MfoNzU/l
j+A3wk+F116OI7/CH+GJrXHM7MdH40fD/m3+d/2l+Gn+Af5EPKlcXS4lZwv3
h7yKvGJm3ob3h/lm6ur6ncP1jN+b345fFl+LPw3niv+HH8Hf4Pfx1XhzfBU+
G1+GD8U348vxPvgb/Fs5g/xpuIfg5ealM3NDLhLeu+pe+mP1G5n/mT+S3xg/
Hd7z8jvya/wx/pH1HTMH8DH4sbCHm/9Dfxl+hn+QPwlPJteQS8vZw/0hrxLv
x/BFzc1aEktzdQ39LuF6xu/Db88vx1+HPwvnil/Bj+Jv8Qf4GrwF/is+B1+O
D8O34Cvwvvhb/Ds5o/xZuI/g5eGlN1MUG2XtrTdOr7HZX7ijuE24Z8LnXI4r
v8Gf4B9b45oZix0Pe7fZP/WWY2e5f3Enm00u15TLyDnCfSGvMq+4mUied1Lz
LdQ19buG6xi/L78D/yf+evw5fhO/ih8LP86Ezx++Fm8prsbn4iv0h+Nbza/E
ww85edWZwmce/wbPEI5lrhg8Wt1Hf7x+E+407mhuU/ws/qkcT36LP8U/scYz
Mw47EfZrs7v1VmDnuIe4U8x+IdeSy8o5wz0hrwqvhJnInnMy8y3VtfS7hWsg
vx+/I788fwP+Ar+FX8OP45HCZw5fh7fC1+Dz8JX6I/Bt5lfhkdT51JnD5zx8
J+aO4fZVT+A2xafjY/BmjnUO/0yOH/69wv0N/ikvvpmD8vhwXQ97c/hb2Hnu
Ye6X6trqcupc4b4Pr2quJDe5mVbW2nrdwzWO25/biVuBuzHsQfht/Dp+Ao8c
PlP4erw1vhafj6/SH4lvN/8r3g+PLOeXs8ifh72D9y0vo5niZsda+4XfPXgz
eGN55/U/VycI/0bhPgb7zEwC7l/yBPxk2IPN7dFfhV/gH+FPxVPIdeSf5G85
X/Bb8+uE312wAVhnbJP+K/07+jcc528sSvjMYBscpw2+Dl+A/6o/Ct9hdjXe
H48ify9nlZOEfYH3HS9TeD/IJcyPU/fXn6jfnD+TP45/AUuiThjuLfQ/xxNy
J+qfCvtU+Jv6FzlHOV+p66rLq3OHeze8mplS3Cjep1+aa6Ouq98jXKv4A/ld
+BX5m/HX+F38Jn4Sjxo+K3hbbD22MOyn+jvNrdGPqi6gzqZOGq77eF4zmcP7
QS5pbrx6gP4k/fCj7Cz+eH5z/CKeVE4kR5Zf4kl4icwckifhp8OeZH6v/mr8
H/4x/s94SrmeXEHOy6nOKc1PYa6ttV74HSVcO+U38j35lByN98zMRsdoh23A
FmGr9cfguxxzLT4AjyYXlLPLycLez8vHyxLeF3Ip8xPUA8NvE+H85GT8d8Pe
KiflvotP1j8T9hfePr012L+847yv1fXVFdV5HDMfpwanDD+q1+4rs+3U9fV7
hmsPfxC/K78Sfyv+Fr+P38JP49Gtz8N7GG+Pb8QX42v0x+K/mV+HR1cXUucI
r2H4/smdyB0UfmsI5ygnx9/Do4R7D71kjvEe57A8BT8bri/8/fpr8Uv8E/xf
8FRyA7mS/I2cn1eTV9ZMNM8tpfn26gbhN49w7ZPDD34P5DNyB3ETviTsZ/Lv
2HrHiqH+QZ1TnTzsyXh+x80a3sNyGXOT1IP1J+u35s/mT+C3wC/hX8jvh/dx
uKfAk/PeN3NEnoqfC9cT8wf01+GX+X/zU6sbqiurv8e/5nbgNgy/XYTrW9iu
8IfyWTmG+RfczY7bEdvMXYqt1R+P/8HdgA/EY8qF5VzyF2HP5X3Pyxbev3JZ
85PVQ8JvAtw53Incy/pfqj8Ie1y435HPh88Rb738H3YSS6NupK6iLoDVcuxy
vFT8jtZGer3C54g3mNeNV9nf3YFHlh/ht/FzeEzrS3wL3gnfYn4Zvk5/Av4n
fyM+CI8lF5Fzh/0m7Ku8ArzsZsqZnWIdGr7nh3OVU3A/DPuY3i+WC+H9pt6A
X8FOYdMcJ234HiRXDddyuSCntuP+xI/u/ZXabCd1Y/3e4TPFH8Lvzq/C34lH
kR/j57FYnFdYZ/2t5paHa7N+bI+ivDzh/MP3NHwqPix8N8fmYpOwK/pfqROr
ozl+pLC/OOYH3KPyNPxieI/pH9TfaPYq/zR/Op5ObiJXk7+TC/Hq8MqbieH5
pDHfWd1Ev0/4HPGH8nvwd2FR1U+wC/pd5G3cFeH6K8fxKK/3s97w8J1ansef
bPaqfkr1R+GaEPZl/EvH/5B7TJ6O/xOeg/5f+pvMXuOf4c/A08tN5erhWhy+
g/Hq8iqYSWu2i7WpXrlw7Qkfce5T+aLcVd6OrwyfVXk3tslx3lEXU3+jThH2
bbygY+bgVjDzi3WE3hS9Dtz53Cncltxr+Nfyx+FaEfZiXgpeYjPH5Rn4v+G5
6R/S32z+Ov8sfyaeQW4m15ALc+pxKvLTmetqbRbeA+F6FG5hec/kf+Ru8g58
VTgveQ+22THiqn9Ufxv2aqyQ4+XkVeRPs47Um6rXkbeAN5XXynlcx1PJn8gx
5ai8r3gfmTkhz8Qvheekf1h/i/kb/HP8jOrm6prqInh6bjduc3X5cN0Jt4n4
c/lfubu8E/81nIu8F9tiNp66uPq7cO5h38V/8LdycSuZmW4dpfezXifuQu7P
3NbcG3hq+VM5VthPeSl5H5v5W56FXw7PRf+I/lbzN/nn+bPwTHILuZacTy7K
q8+rZCaD2e7WFnoVwvUmfP3ivpAvyT3kXfjqcG5yfI8SeN6w5+oVdpzceGXe
DOvocK3R68xbxPuF18bfvImnkT+TY8vRwzWf94mZk/Js/L/wfPSP6m8zf4t/
gT8bzyy3lGvLxTgNOJX5Gc31sLbUqxje93Is3kv5stxT/g1fE85L3odtdYwE
6pLqfOpUWBHHy8Orwp9pHaM3Ta8LbzFvGu8Wllb9uTqOc4rBScX5lH9KnoNf
Cc9H/5j+drO3+Rf5c/Asciu5jpxf/pHXkFfFTEzXpUzme6pb6fcNrw9/GL8n
fw8WW/0K+0+/l/w7d204TzmhR1W9WeE7qF5XeQl/utnb+unUScL1IOyPeGrH
/4x7Wp6LXw3PQf+4/g6zd/j/8OfiWeXWct2wV8vFeY14VaP+/78PyGz+f26s
Gn4=
        "]]}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{300., 0},
  BaseStyle->{FontFamily -> "Helvetica", Large},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"reflectivity\"", TraditionalForm], None}, {
     FormBox["\"\[Lambda] (nanometers)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{300, 900}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7288390785499945`*^9, 
  3.7288390800259256`*^9}},ExpressionUUID->"c27345d9-4af4-4182-a76a-\
0640923be5a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stackGraphic", "[", 
   RowBox[{
   "n1_", ",", " ", "n2_", ",", " ", "lone_", ",", " ", "ltwo_", ",", " ", 
    "numlay_", ",", "\[Theta]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r1", ",", "r2", ",", " ", "gO"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r1", " ", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.99", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "n1"}], "/", "10"}], "]"}]}], "]"}], ",", 
        RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"lone", ",", "1600"}], "}"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r2", " ", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.99", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "n2"}], "/", "10"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lone", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ltwo", " ", "+", " ", "lone"}], ")"}], ",", "1600"}], 
           "}"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gO", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"r1", ",", "r2"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Translate", "[", 
          RowBox[{"gO", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"n", " ", 
              RowBox[{"(", 
               RowBox[{"lone", "+", " ", "ltwo"}], ")"}]}], ",", "0"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", " ", 
           RowBox[{"numlay", "-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1200"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Pi", " ", 
                 RowBox[{"\[Theta]", "/", "180"}]}], "]"}]}], ",", 
              RowBox[{"800", " ", "-", 
               RowBox[{"1200", 
                RowBox[{"Sin", "[", 
                 RowBox[{"Pi", " ", 
                  RowBox[{"\[Theta]", "/", "180"}]}], "]"}]}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "800"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1200"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Pi", " ", 
                 RowBox[{"\[Theta]", "/", "180"}]}], "]"}]}], ",", " ", 
              RowBox[{"800", " ", "+", " ", 
               RowBox[{"1200", 
                RowBox[{"Sin", "[", 
                 RowBox[{"Pi", " ", 
                  RowBox[{"\[Theta]", "/", "180"}]}], "]"}]}]}]}], "}"}]}], 
           "}"}], "]"}]}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.6332638168815913`*^9},ExpressionUUID->"d34be3c4-80a4-4e1d-94dc-\
1209fcd2f691"],

Cell[BoxData[
 RowBox[{
  RowBox[{"view", "[", 
   RowBox[{
   "mode_", ",", "lone_", ",", "ltwo_", ",", "n1_", ",", "n2_", ",", 
    "numlay_", ",", "tin_", ",", "lmin_", ",", "lmax_", ",", "lamloc_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "func", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"func", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mode", "===", "\"\<TM\>\""}], ",", "rM", ",", "rE"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"func", "[", 
        RowBox[{
         FractionBox["lone", 
          RowBox[{
           SuperscriptBox["10", "9"], " ", "1"}]], ",", 
         FractionBox["ltwo", 
          RowBox[{
           SuperscriptBox["10", "9"], " ", "1"}]], ",", "n1", ",", "n2", ",", 
         "numlay", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "\[Pi]"}], ")"}], " ", "3", " ", 
           SuperscriptBox["10", "8"]}], 
          FractionBox["\[Lambda]", 
           SuperscriptBox["10", "9"]]], ",", 
         RowBox[{"tin", " ", 
          RowBox[{"Pi", "/", "180"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "lmin", ",", "lmax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lmin", ",", "lmax"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          "18"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Lambda] (nanometers)\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(r\), \(2\)]\)\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[RuleDelayed]", "  ", 
        RowBox[{"\"\<Reflectance Versus Wavelength \>\"", "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mode", "\[Equal]", "\"\<TE\>\""}], ",", "\"\<TE\>\"", 
           ",", "\"\<TM\>\""}], "]"}], " ", "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(n\), \(\[Alpha]\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "n1", "]"}], "<>", 
         "\"\<  \!\(\*SubscriptBox[\(n\), \(\[Beta]\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "n2", "]"}], "<>", 
         "\"\<   \!\(\*SubscriptBox[\(\[Theta]\), \(in\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "tin", "]"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(t\), \(\[Alpha]\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "lone", "]"}], "<>", 
         "\"\<  \!\(\*SubscriptBox[\(t\), \(\[Beta]\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "ltwo", "]"}], "<>", "\"\<  Layers= \>\"", "<>", 
         RowBox[{"ToString", "[", "numlay", "]"}]}]}], " ", ",", 
       RowBox[{"Filling", "\[Rule]", " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Epilog", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"lamloc", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"lamloc", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",ExpressionUUID->\
"2f7c0f84-52c5-4360-9852-3408ecdf8a05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{
   "mode_", ",", "lone_", ",", "ltwo_", ",", "n1_", ",", "n2_", ",", 
    "numlay_", ",", "tin_", ",", "lmin_", ",", "lmax_", ",", "nDataPoints_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "func", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"func", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mode", "===", "\"\<TM\>\""}], ",", "rE", ",", "rM"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"func", "[", 
         RowBox[{
          FractionBox["lone", 
           RowBox[{
            SuperscriptBox["10", "9"], " "}]], ",", 
          FractionBox["ltwo", 
           RowBox[{
            SuperscriptBox["10", "9"], " "}]], ",", "n1", ",", "n2", ",", 
          "numlay", ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", " ", "\[Pi]"}], ")"}], " ", "3", " ", 
            SuperscriptBox["10", "8"]}], 
           FractionBox["\[Lambda]", 
            SuperscriptBox["10", "9"]]], ",", 
          RowBox[{"tin", " ", 
           RowBox[{"Pi", "/", "180"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "lmin", ",", "lmax", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lmax", "-", "lmin"}], ")"}], "/", "nDataPoints"}]}], 
         "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6967181137132916`*^9, 3.696718190256375*^9}, {
  3.6967183361546726`*^9, 3.696718338711705*^9}, {3.696718407256276*^9, 
  3.6967184088922434`*^9}, {3.7288391926913157`*^9, 
  3.7288391939877634`*^9}},ExpressionUUID->"c57dcc05-13d2-499d-a6d3-\
e53e6c3237a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Output", "Subsubsection",ExpressionUUID->"7a71120b-3763-42eb-b092-2c8af0fec2f3"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "@", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"view", "[", 
        RowBox[{
        "mode", ",", "lone", ",", "ltwo", ",", "n1", ",", "n2", ",", "numlay",
          ",", "tin", ",", "lmin", ",", "lmax", ",", "lamloc"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"stackGraphic", "[", 
          RowBox[{"n1", ",", "n2", ",", 
           RowBox[{"4", "lone"}], ",", 
           RowBox[{"4", "ltwo"}], ",", "numlay", ",", "tin"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Light Properties\>\"", ",", "\"\<Subsubsubsection\>\""}], 
      "]"}], ","}], "*)"}], "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mode", ",", "\"\<TE\>\"", ",", "\"\<Mode\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<TE\>\"", "\[Rule]", "\"\<Tranverse Electic (E-parallel)\>\""}], 
       ",", 
       RowBox[{
       "\"\<TM\>\"", "\[Rule]", " ", 
        "\"\<Transverse Magnetic (H-parallel)\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tin", ",", "25", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(\(in\)\(\\\ \)\)]\)\>\""}], 
      "}"}], ",", "0", ",", 
     RowBox[{"1", "\[IndentingNewLine]", "80"}], ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Material Properties\>\"", ",", "\"\<Subsubsubsection\>\""}], "]"}],
      ","}], "*)"}], "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1", ",", "1.5", ",", "\"\<Index \[Alpha]\>\""}], "}"}], ",", 
     "1", ",", "20", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n2", ",", "2.62", ",", "\"\<Index \[Beta]\>\""}], "}"}], ",", 
     "1", ",", "20", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lone", ",", "65", ",", "\"\<Width \[Alpha] (nm)\>\""}], "}"}], 
     ",", "1", ",", "500", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ltwo", ",", "65", ",", "\"\<Width \[Beta] (nm)\>\""}], "}"}], 
     ",", "1", ",", "500", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"numlay", ",", "50", ",", " ", "\"\<Number of Layers\>\""}], 
      "}"}], ",", " ", "2", ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Display Controls\>\"", ",", "\"\<Subsubsubsection\>\""}], 
      "]"}], ","}], "*)"}], "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lmin", ",", "300", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(\(min\)\(\\\ \)\)]\)\>\""}], 
      "}"}], ",", "0", ",", "600", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lmax", ",", "900", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(\(max\)\(\\\ \)\)]\)\>\""}], 
      "}"}], ",", "lmin", ",", "1200", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lamloc", ",", "525", ",", "\"\<\[Lambda] guide line\>\""}], 
      "}"}], ",", 
     RowBox[{"lmin", "-", "100"}], ",", 
     RowBox[{"lmax", "+", "100"}], ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", " ", "\"\<InputField\>\""}], 
     ",", 
     RowBox[{"ContinuousAction", "\[Rule]", " ", "True"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Export Controls\>\"", ",", "\"\<Subsubsubsection\>\""}], 
      "]"}], ","}], "*)"}], "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", "\[IndentingNewLine]", 
    RowBox[{"\"\<Export Image\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"currentgraphic", ",", "nm"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"currentgraphic", "=", 
         RowBox[{"Column", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"view", "[", 
             RowBox[{
             "mode", ",", "lone", ",", "ltwo", ",", "n1", ",", "n2", ",", 
              "numlay", ",", "tin", ",", "lmin", ",", "lmax", ",", "lamloc"}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"stackGraphic", "[", 
               RowBox[{"n1", ",", "n2", ",", 
                RowBox[{"4", "lone"}], ",", 
                RowBox[{"4", "ltwo"}], ",", "numlay", ",", "tin"}], "]"}], 
              ",", 
              RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nm", "=", 
         RowBox[{"SystemDialogInput", "[", 
          RowBox[{"\"\<FileSave\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<filename_Lab_2013.tiff\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<TIFF\>\"", "\[Rule]", 
                RowBox[{"{", "\"\<filename.tiff\>\"", "}"}]}], ",", 
               RowBox[{"\"\<GIF\>\"", "\[Rule]", 
                RowBox[{"{", "\"\<filename.gif\>\"", "}"}]}], ",", 
               RowBox[{"\"\<PNG\>\"", "\[Rule]", 
                RowBox[{"{", "\"\<filename.png\>\"", "}"}]}]}], "}"}]}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nm", "=!=", "$Canceled"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Export", "[", 
            RowBox[{"nm", ",", "currentgraphic"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "\[IndentingNewLine]",
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", "\[IndentingNewLine]", 
    RowBox[{"\"\<Export Data\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dataX", ",", "dataY", ",", "currentData", ",", "nm"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dataY", "=", 
         RowBox[{"data", "[", 
          RowBox[{
          "mode", ",", "lone", ",", "ltwo", ",", "n1", ",", "n2", ",", 
           "numlay", ",", "tin", ",", "lmin", ",", "lmax", ",", "10000"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dataX", "=", 
         RowBox[{"N", "@", 
          RowBox[{"Range", "[", 
           RowBox[{"lmin", ",", "lmax", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"lmax", "-", "lmin"}], ")"}], "/", "10000"}]}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"currentData", "=", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{"dataX", ",", "dataY"}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nm", "=", 
         RowBox[{"SystemDialogInput", "[", 
          RowBox[{"\"\<FileSave\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<filename_Lab_2013.csv\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<CSV\>\"", "\[Rule]", 
               RowBox[{"{", "\"\<filename.csv\>\"", "}"}]}], "}"}]}], "}"}]}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"nm", "=!=", "$Canceled"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Export", "[", 
            RowBox[{"nm", ",", "currentData"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "\[IndentingNewLine]",
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", " ", "Medium"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{"Off", "[", 
      RowBox[{"Infinity", "::", "indet"}], "]"}], ")"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.728839106835225*^9, {3.7288394496086473`*^9, 3.728839542649086*^9}, 
   3.7288397003935933`*^9},ExpressionUUID->"99d7f70e-808e-4d55-a5a2-\
ef42c78d3156"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024.5, 513.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8fe44dd4-bd0e-4992-8fc5-ad5ea998bad4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 3, 59, "Section",ExpressionUUID->"8bd8dd56-5d8e-45a8-aacd-948f0665fb5e"],
Cell[755, 27, 1056, 16, 93, "Text",ExpressionUUID->"b41be974-9a7e-45c5-9374-b68be74f06be"],
Cell[1814, 45, 145099, 2471, 33, "Output",ExpressionUUID->"3638b29d-c44b-4bb3-b096-5497d75a5f4e"],
Cell[CellGroupData[{
Cell[146938, 2520, 99, 0, 48, "Subsection",ExpressionUUID->"25555d8e-4334-4e05-b310-8db62aa50fdc"],
Cell[CellGroupData[{
Cell[147062, 2524, 1506, 24, 135, "Text",ExpressionUUID->"6d6f64cf-aa41-4d8a-8af7-a166ee164479",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[148571, 2550, 536, 15, 31, "Text",ExpressionUUID->"56dfb1ab-468b-48d2-982c-73c1e24363eb",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[149110, 2567, 3001, 90, 139, "Text",ExpressionUUID->"84d056e3-1c31-42c1-99ac-5a174b1e31e5",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[152114, 2659, 794, 23, 126, "Input",ExpressionUUID->"47980050-f7d6-4a21-83cd-36be6c4460ac",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[152911, 2684, 6149, 195, 310, "Text",ExpressionUUID->"16e0c4c1-61d8-4664-8380-d705df87575a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[159109, 2885, 88, 0, 34, "Subsection",ExpressionUUID->"f509cb97-84a2-4540-8b7e-d1d5b0cb6633"],
Cell[CellGroupData[{
Cell[159222, 2889, 85, 0, 40, "Subsubsection",ExpressionUUID->"1277b5c5-1e03-49d5-b350-6e5147a9c97b"],
Cell[CellGroupData[{
Cell[159332, 2893, 288, 6, 31, "Text",ExpressionUUID->"e873dccd-f307-4092-9090-4821d13439cc",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[159623, 2901, 2639, 66, 311, "Input",ExpressionUUID->"457df986-d52b-448a-8fa0-7ce676694d9c",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[162265, 2969, 350, 10, 40, "Input",ExpressionUUID->"44d3e9f9-0cae-4fef-8c15-3222aba972f7",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[162630, 2982, 2609, 73, 69, "Output",ExpressionUUID->"7711aaea-e105-400c-8d73-0d090d531e01"],
Cell[CellGroupData[{
Cell[165264, 3059, 2944, 78, 400, "Input",ExpressionUUID->"6de8f560-ed9d-4d44-8e87-b376a9c714d7",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[168211, 3139, 372, 10, 40, "Input",ExpressionUUID->"027533d0-a675-45b6-ad2c-4bc0562d3077",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[168598, 3152, 3755, 107, 81, "Output",ExpressionUUID->"7f60588f-6dbf-4b3f-be7e-c1fd88bc3b9a"],
Cell[CellGroupData[{
Cell[172378, 3263, 656, 19, 59, "Input",ExpressionUUID->"5fa39684-b764-4b2f-a6ec-2392c223c9b7",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[173037, 3284, 2227, 57, 361, "Input",ExpressionUUID->"54c36822-3e9e-40fc-8652-7d4d3da69044",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[175267, 3343, 2225, 56, 361, "Input",ExpressionUUID->"f78b9503-6a50-4fdb-859e-5da74964c4c2",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[177541, 3405, 88, 0, 33, "Subsubsection",ExpressionUUID->"e6761ddb-330e-483d-98f2-806196b7556f"],
Cell[CellGroupData[{
Cell[177654, 3409, 1347, 37, 96, "Input",ExpressionUUID->"ee3d44c0-a177-4124-8b0c-e0888557acda",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[179004, 3448, 55881, 932, 347, "Output",ExpressionUUID->"c27345d9-4af4-4182-a76a-0640923be5a5"]
}, Open  ]],
Cell[234900, 4383, 3728, 103, 161, "Input",ExpressionUUID->"d34be3c4-80a4-4e1d-94dc-1209fcd2f691",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True],
Cell[238631, 4488, 3742, 87, 259, "Input",ExpressionUUID->"2f7c0f84-52c5-4360-9852-3408ecdf8a05"],
Cell[242376, 4577, 1852, 47, 160, "Input",ExpressionUUID->"c57dcc05-13d2-499d-a6d3-e53e6c3237a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244265, 4629, 92, 0, 40, "Subsubsection",ExpressionUUID->"7a71120b-3763-42eb-b092-2c8af0fec2f3"],
Cell[244360, 4631, 11164, 266, 767, "Input",ExpressionUUID->"99d7f70e-808e-4d55-a5a2-ef42c78d3156",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 InitializationGroup->True]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

